*-----------------------------------------------------------------------------
* <Rating>9665</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE IB.ATM.MSG.IN ( INMSG )

    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.INTERCO.PARAMETER
    $INCLUDE I_F.ACCOUNT
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE IB.BP I_IB.TAG.SB.COMMON
    $INCLUDE IB.BP I_F.IB.OPE.TYPES.SB
    $INCLUDE IB.BP I_F.IB.MSG.GRP.SB

    COM/IB/DYN.IN.MSG,Y.SEND.ZERO.BAL,JUST.GET.BALANCE

    COM/IB.FILE/YR.MESSAGE.ARRAY,YR.INTERFACE

    COM/ATM.CONTROL/YMSG.KEY

    COM/IB.CUST/YR.CUSTOMER.ID

    COM/IB.CACHE/YR.ALREADY.PROCESSED

    GOSUB INITIALISE

    GOSUB PROCESS

    RETURN

PROCESS:

    IF IN.PROCESS.ERROR THEN RETURN

    IF RETURN.DATA THEN RETURN

    IN.MSG.TYPE = ""
    LOCATE YR.MESSAGE.TYPE IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
        IN.MSG.TYPE = MSG.DATA<MSG.TAG.VALUE,POS>
    END

    IF NOT(IN.MSG.TYPE) THEN
        ETEXT = "MESSAGE TYPE NOT FOUND @ TAG " :  YR.MESSAGE.TYPE
        GOSUB LOG.ERROR
        RETURN
    END

    YMSG = "IN.MSG.TYPE=" : IN.MSG.TYPE
    GOSUB LOG.ERROR

    IN.MESSAGE.CODE = ""
    LOCATE YR.MESSAGE.CODE IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
        IN.MESSAGE.CODE =  MSG.DATA<MSG.TAG.VALUE,POS>
    END

    IF NOT(IN.MESSAGE.CODE) THEN
        ETEXT = "MESSAGE CODE NOT FOUND @ TAG " : YR.MESSAGE.CODE
        GOSUB LOG.ERROR
        RETURN
    END

    YMSG = "IN.MESSAGE.CODE=" : IN.MESSAGE.CODE
    GOSUB LOG.ERROR

    CALL CACHE.READ(FN.IB.MSG.GRP.SB, IN.MSG.TYPE, R.IB.MSG.GRP.SB, YERR)
    IF YERR THEN
        ETEXT = FN.IB.MSG.GRP.SB : " RECORD " : IN.MSG.TYPE : " NOT FOUND"
        GOSUB LOG.ERROR
        RETURN
    END
    YERR = ""

    CALL CACHE.READ(FN.IB.OPE.TYPES.SB, IN.MESSAGE.CODE, R.IB.OPE.TYPES.SB, YERR)
    IF YERR THEN
        ETEXT = FN.IB.OPE.TYPES.SB : " RECORD " : IN.MESSAGE.CODE : " NOT FOUND"
        GOSUB LOG.ERROR
        RETURN
    END

    YR.MESSAGE.EVENT = R.IB.OPE.TYPES.SB<IB.OPE.TYP.CALL.TYPE>

    YR.APPLICATION = R.IB.OPE.TYPES.SB<IB.OPE.TYP.APPLICATION>

    YR.START.VARIABLE.DATA = R.IB.OPE.TYPES.SB<IB.OPE.TYP.START.VARIABLE>

    YR.EVENT.PROCESS = R.IB.OPE.TYPES.SB<IB.OPE.TYP.EVENT.PROCESS>

    YMSG = "YR.MESSAGE.EVENT=" : YR.MESSAGE.EVENT : " YR.APPLICATION=" : YR.APPLICATION : " YR.EVENT.PROCESS=" : YR.EVENT.PROCESS
    GOSUB LOG.ERROR
    IF NOT(YR.MESSAGE.EVENT) THEN
        ETEXT = "EVENT NOT DEFINED ON RECORD " : FN.IB.OPE.TYPES.SB : " ID=" : IN.MESSAGE.CODE
        GOSUB LOG.ERROR
        RETURN
    END

    YMSG =  "EVENT=" :  YR.MESSAGE.EVENT : " FOR MESSAGE.TYPE " : IN.MSG.TYPE

    GOSUB LOG.ERROR

    JUST.GET.BALANCE = 0
    YR.ERROR.IN.APPLICATION = 0

    BEGIN CASE

    CASE IN.MSG.TYPE[1,1] <> "1"
        Y.SEND.ZERO.BAL =0
        YMSG = "IN " : IFS(IN.MSG.TYPE[1,1]="2","REVERSAL","PENDING") :"  MODE"
        GOSUB LOG.ERROR
        CALL IB.PROCESS.ACCT.BAL.SB
        YMSG ="JUST CAME BACK FROM BAL NOW CALL OFS"
        GOSUB LOG.ERROR
        CALL IB.ATM.OFS.SB(INMSG)
        YMSG = INMSG

    CASE IN.MSG.TYPE[2,4] = "EDST"
        CALL IB.PROCESS.ACCT.BAL.SB
        CALL IB.ATM.OFS.SB(INMSG)

    CASE YR.EVENT.PROCESS = "BAL"
        Y.SEND.ZERO.BAL =0
        CALL IB.ATM.PROCESS.BALANCE.SB

    CASE YR.EVENT.PROCESS = "STMT"
        Y.SEND.ZERO.BAL = 0
        CALL IB.ATM.PROCESS.BALANCE.SB

    CASE YR.EVENT.PROCESS EQ "CASHDEPOSIT"
        Y.ERR = 1
        CALL IB.ATM.PROCESS.ACCOUNT.SB
        IF NOT(Y.CARD.STATUS) THEN
            CALL IB.ATM.OFS.SB(INMSG)
        END ELSE
            CALL IB.ATM.RETURN.MSG.SB
        END

    CASE YR.EVENT.PROCESS = "OFS"
        Y.SEND.ZERO.BAL = 0
        Y.ERR = 1
        CALL IB.PROCESS.ACCT.BAL.SB
        IF NOT(Y.CARD.STATUS) THEN
            YMSG = "CARD AND POSTING RESTRICTION PASS CARD.STATUS=" : Y.CARD.STATUS
            GOSUB LOG.ERROR
            CALL IB.ATM.OFS.SB(INMSG)
            IF NOT(INMSG = "BYPASS") THEN
                YMSG = INMSG
                GOSUB LOG.ERROR
                Y.ERR = 0
            END
        END
        IF Y.ERR THEN
            YMSG = "Y.CARD.STATUS=" : Y.CARD.STATUS : " TRANSACTION REJECTED"
            GOSUB LOG.ERROR
            GOSUB RETURN.ERROR.RECORD
        END
        Y.ERR = 0

    CASE YR.EVENT.PROCESS = "PIN"
        Y.SEND.ZERO.BAL = 0
        JUST.GET.BALANCE = 1
        CALL IB.ATM.PROCESS.BALANCE.SB
        IF Y.CARD.STATUS THEN
            GOSUB RETURN.ERROR.RECORD
        END ELSE
            CALL IB.ATM.RETURN.MSG.SB
        END

    CASE YR.EVENT.PROCESS EQ "NIB"
        Y.ERR = 1
        CALL IB.ATM.PROCESS.ACCOUNT.SB
        IF NOT(Y.CARD.STATUS) THEN
            CALL IB.ATM.OFS.SB(INMSG)
            IF NOT(INMSG = "BYPASS") THEN
                YMSG = INMSG
                GOSUB LOG.ERROR
                Y.ERR = 0
            END
        END
        IF Y.ERR THEN
            CALL IB.ATM.RETURN.MSG.SB
        END

    CASE YR.EVENT.PROCESS = "IBAN"
        CALL IB.ATM.PROCESS.ACCOUNT.SB
        CALL IB.ATM.RETURN.MSG.SB

    CASE OTHERWISE
        YR.ERROR.IN.APPLICATION = 6
        Y.CARD.STATUS = 6
        GOSUB RETURN.ERROR.RECORD

    END CASE

    RETURN

RETURN.ERROR.RECORD:

    Y.SEND.ZERO.BAL = 1
    JUST.GET.BALANCE = 1
    CALL IB.ATM.PROCESS.BALANCE.SB
    CALL IB.ATM.RETURN.ERROR.SB
    RETURN

LOG.ERROR:

    IF ETEXT THEN
        IB.LOG.LEVEL = "ERROR"
    END ELSE
        ETEXT = YMSG
    END

    CALL IB.ATM.LOG.ERROR( G$THIS )

    ETEXT = ""

    IB.LOG.LEVEL = "DEBUG"

    RETURN

INITIALISE:

    Y.SEND.ZERO.BAL = 0
    YSPACE = CHARX(0)
    INMSG = CHANGE(INMSG,YSPACE,"")

    YR.CUSTOMER.ID = ""

    ID.NEW= ""
    Y.CARD.STATUS = ""

    DEFAULT.LOG = "DEBUG"

    IB.LOG.LEVEL = DEFAULT.LOG

    RETURN.DATA = ""

    CALL IB.ATM.COMMON.LOAD.SB

    G$THIS = "IB.ATM.MSG.IN"
    YR.CARD.VALIDATION.ERROR = 0
    YR.ERROR.IN.APPLICATION = 0

    IN.PROCESS.ERROR = 0
    IB.ATM.BALANCE.SB = ""

    IF YR.INTERFACE = "FILE" THEN
        USER.NUMBER = 1
        MSG.DATA = YR.MESSAGE.ARRAY
    END ELSE
        YMSG = INMSG
        GOSUB LOG.ERROR

        YMSG.KEY = INMSG["|",1,1]

        USER.NUMBER = INMSG["|",3,1]
        YMSG = "USER.ID : " : USER.NUMBER
        GOSUB LOG.ERROR

        YMSG = "BYPASS"
        R.XML = INMSG["|",2,1]

        YR.ALREADY.PROCESSED = 0
        YR.RETURN = ""
        YR.ACTION = "CHECK"
        CALL IB.MSG.LOGGER.SB( YMSG.KEY, YR.ACTION, YR.RETURN)
        IF YR.RETURN THEN
            YMSG = "MESSAGE ALREADY PROCESSED " : YMSG.KEY
            GOSUB LOG.ERROR
            RETURN.DATA = YR.RETURN
            YR.ALREADY.PROCESSED = 1
            INMSG = "BYPASS"
            RETURN
        END ELSE
            MSG.DATA.CONV = XMLTODYN(R.XML,XSLTOT24,RESULT)
            IF RESULT = "-1" THEN
                ETEXT = MSG.DATA.CONV
                GOSUB LOG.ERROR
                IN.PROCESS.ERROR = 1
                RETURN
            END

            MSG.DATA = ""

            YNO = DCOUNT(MSG.DATA.CONV, FM)
            FOR K = 1 TO YNO
                MSG.DATA<MSG.TAG.ID,K> = MSG.DATA.CONV<K,MSG.TAG.ID>
                MSG.DATA<MSG.TAG.VALUE,K> = MSG.DATA.CONV<K,MSG.TAG.VALUE>
            NEXT K
        END

        OFS.EVENTS = "CASH.WITHDRAWAL" : FM : "BILL.PAYMENT" : FM : "CHEQUE.REQUEST" : FM : "BUY.POS" : FM : "INT.BANK.TRF.PAY" : FM : "ADVANCE"

        DYN.IN.MSG = MSG.DATA
    END

    RETURN

END
