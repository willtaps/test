    SUBROUTINE SB.VALIDA.ACC.NO

*********************************************
*Develop By : Priti Carsane
*Summary Description: This routine checks if the account that its inputted is a valid account.
*Development Date: 06/02/2015
*
*Modified Date:10/08/2015
*Summary Description: if account exits, calculates commission
**********************************************

    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.SB.IB.CARD.ISSUE
*   $INCLUDE I_F.FT.CHARGE.TYPE
    $INCLUDE I_F.FT.COMMISSION.TYPE
    $INSERT BSTM.BP I_F.SB.SPECIAL.CONDITIONS

    GOSUB INIT

    RETURN

INIT:

    YAC.NO = COMI
    CALL GET.ACCT.BRANCH(YAC.NO,MNEM,YCOMP)

    FN.AC = 'F':MNEM:'.ACCOUNT'
    F.AC = ''
    CALL OPF(FN.AC,F.AC)

    FN.CUSTOMER = 'FBNK.CUSTOMER'
    FV.CUSTOMER = ''
    CALL OPF(FN.CUSTOMER,FV.CUSTOMER)


    GOSUB PROCESS

    RETURN

PROCESS:
    READ R.ACCT FROM F.AC,YAC.NO THEN
        YCUST = R.ACCT<AC.CUSTOMER>
        GOSUB GET.CUSTOMER.DETAILS
        GOSUB PROCESS.CHARGES
    END ELSE
        E = 'MISSING ACCOUNT NUMBER!'
        ETEXT = 'MISSING ACCOUNT NUMBER!'
        CALL STORE.END.ERROR

    END

    RETURN

*--------------------
GET.CUSTOMER.DETAILS:
*--------------------
    CALL F.READ(FN.CUSTOMER,YCUST,R.CLI,FV.CUSTOMER,CU.ERR)
    YNOME = R.CLI<EB.CUS.SHORT.NAME>
    YSEXO=R.CLI<EB.CUS.GENDER>
    IF R.CLI<EB.CUS.STREET,1> THEN
        YMORADA = R.CLI<EB.CUS.STREET,1>
    END

    IF  R.CLI<EB.CUS.STREET,2> THEN
        YMORADA =  R.CLI<EB.CUS.STREET,2>
    END

    YLOCALIDADE = R.CLI<EB.CUS.TOWN.COUNTRY>

    R.NEW(IBCI.NOMECLI) = YNOME
    R.NEW(IBCI.NOMECLI2) = ""
    R.NEW(IBCI.ENDERCLI) = YMORADA
    R.NEW(IBCI.LOCCLI) = YLOCALIDADE
    R.NEW(IBCI.CODPOST) = YLOCALIDADE
    R.NEW(IBCI.SEXO) = YSEXO


    RETURN


PROCESS.CHARGES:
    CALL DBR('ACCOUNT':@FM:AC.LOCAL.REF,YAC.NO,YR.LOCAL.REF)
    YR.COD.SC = YR.LOCAL.REF<1,51>
    CALL DBR('ACCOUNT':FM:AC.CURRENCY,YAC.NO, YR.MOEDA)
    YR.BSTM.SPECIAL.CONDITIONS.ID = YR.COD.SC
    GOSUB READ.BSTM.SPECIAL.CONDITIONS.FILE
    IF ER THEN RETURN
    YR.PRODUCT = 'FT'
    LOCATE YR.PRODUCT IN R.BSTM.SPECIAL.CONDITIONS<SB.SC.APPLICATION,1> SETTING APP.POS ELSE
        RETURN
    END
    BEGIN CASE
    CASE APPLICATION = 'SB.IB.CARD.ISSUE'
        GOSUB SB.IB.CARD.ISSUE
        RETURN
    END CASE
    CALL REBUILD.SCREEN
    RETURN


SB.IB.CARD.ISSUE:
    YR.CHARGE.TYPES = R.NEW(IBCI.LOCAL.REF)<1,7>
    LOCATE YR.CHARGE.TYPES IN R.BSTM.SPECIAL.CONDITIONS<SB.SC.DEFAULT.TXN,APP.POS,1> SETTING CHARGE.POS ELSE NULL
    YR.CHARGE.TYPES.NEW = R.BSTM.SPECIAL.CONDITIONS<SB.SC.SPECIAL.TXN,APP.POS,CHARGE.POS>
    IF  YR.CHARGE.TYPES.NEW NE '' THEN
        R.NEW(IBCI.LOCAL.REF)<1,7> = YR.CHARGE.TYPES.NEW
    END ELSE
        YR.CHARGE.TYPES.NEW = R.NEW(IBCI.LOCAL.REF)<1,7>
    END
    CALL F.READ('F.FT.COMMISSION.TYPE',YR.CHARGE.TYPES.NEW,REC.CHRG,F.FT.CHRGE,ERR)
    CHRG.CCY = REC.CHRG<FT4.CURRENCY>
    LOCATE YR.MOEDA IN CHRG.CCY<1,1> SETTING POS ELSE NULL
    YR.CHARGE.AMT = REC.CHRG<FT4.FLAT.AMT,POS>
    R.NEW(IBCI.CHARGES) = YR.CHARGE.AMT
    RETURN

INITIALISE:
    FN.SB.IB.CARD.ISSUE = 'F.SB.IB.CARD.ISSUE'
    F.SB.IB.CARD.ISSUE = ''
    CALL OPF(FN.SB.IB.CARD.ISSUE,F.SB.IB.CARD.ISSUE)
    YR.CARD.ID = '' ; REC.CARD.ISSUE = ''
    RETURN

READ.BSTM.SPECIAL.CONDITIONS.FILE:
    ER = ""
    CALL F.READ("F.SB.SPECIAL.CONDITIONS",YR.BSTM.SPECIAL.CONDITIONS.ID,R.BSTM.SPECIAL.CONDITIONS,F.SB.SPECIAL.CONDITIONS,ER)
    RETURN

READ.SB.IB.CARD.ISSUE:
    ER = ""
    CALL F.READ("F.SB.IB.CARD.ISSUE",YR.CARD.ID,REC.CARD.ISSUE,F.SB.IB.CARD.ISSUE,ER)
    RETURN
END
