    SUBROUTINE IB.ATM.PROCESS.BALANCE.SB

    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.INTERCO.PARAMETER
    $INCLUDE I_F.ACCOUNT
    $INCLUDE I_F.CARD.ISSUE
    $INCLUDE I_F.POSTING.RESTRICT
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE IB.BP I_IB.TAG.SB.COMMON
    $INCLUDE IB.BP I_F.IB.MSG.GRP.SB
    $INCLUDE IB.BP I_F.IB.ATM.BALANCE.SB
    $INCLUDE IB.BP I_F.IB.PARAMETER.SB
    $INCLUDE ATM.BP I_F.ATM.MAPPING.SB

    GOSUB INITIALISE

    GOSUB PROCESS

    RETURN

PROCESS:

    YMSG = "PARAMETER Y.SEND.ZERO.BAL=" : Y.SEND.ZERO.BAL : " JUST.GET.BALANCE=" : JUST.GET.BALANCE
    GOSUB LOG.ERROR

    IF YR.MESSAGE.EVENT NE 'CASH.DEPOSIT' THEN
        IF R.ATM.MAPPING.SB<ATM.MAP.CHECK.BALANCE> EQ 'NO' THEN
            YMSG = "BYPASS BALANCE CHECKING - CHECK.BALANCE SET TO NO"
            GOSUB LOG.ERROR
            RETURN
        END
    END

    MAIN.ACCOUNT.ID = ""
    IF Y.SEND.ZERO.BAL THEN
        GOSUB RETURN.ERROR.RECORD
        RETURN
    END

    CHECK.CARD = 1

    IF R.IB.MSG.GRP.SB<IB.MSG.GRP.VALIDATE.CARD>[1,1] =  "N" THEN
        CHECK.CARD = 0
    END

    IF YR.INTERFACE = "FILE" THEN
        CHECK.CARD = 0
    END

* Get the account number...

    YR.ACCOUNT.ID = ""

    BEGIN CASE

    CASE IN.MSG.TYPE = "2EORI"
        GOSUB SET.S96.COMPANY

    CASE IN.MSG.TYPE ="2EDST"

        LOCATE "329" IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            YR.IN.ACCT =  MSG.DATA<MSG.TAG.VALUE,POS>
            YR.ACCOUNT.ID = ""
            YR.INTERFACE.SAVE = YR.INTERFACE
            YR.INTERFACE = ""
            CALL IB.FMT.ACCOUNT.SB (YR.ACCOUNT.ID,YR.IN.ACCT)
            YR.INTERFACE = YR.INTERFACE.SAVE
            YMSG = "2EDST ACCOUNT = " : YR.ACCOUNT.ID
            GOSUB LOG.ERROR
        END
        CHECK.CARD = 0

    CASE YR.MESSAGE.EVENT EQ 'NIB.RECEIPT' OR YR.MESSAGE.EVENT = "INT.BANK.TRF.BEN"

        LOCATE IB.NIB.ACCT.TAG IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            NIB.ID = MSG.DATA<MSG.TAG.VALUE,POS>
            CALL CACHE.READ("F.SB.NIB.ACCOUNT", NIB.ID, R.SB.NIB.ACCOUNT, YERR)
            IF R.SB.NIB.ACCOUNT THEN
                YR.ACCOUNT.ID = R.SB.NIB.ACCOUNT<1>
            END
        END

        YMSG = "NIB AND INT.BANK.TRF.BEN - ACCOUNT " : YR.ACCOUNT.ID
        GOSUB LOG.ERROR

        CHECK.CARD = 0

    CASE OTHERWISE

        LOCATE IB.BAL.ACCT.TAG IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            YR.IN.ID = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
            CALL IB.FMT.ACCOUNT.SB( YR.ACCOUNT.ID, YR.IN.ID)
            MAIN.ACCOUNT.ID = YR.ACCOUNT.ID
        END

        IF YR.ACCOUNT.ID[1,3] MATCHES '3A' THEN
            CHECK.CARD = 0
            YR.INT.ACCT.SET = 1
        END

    END CASE

* Get the card number and check it.

    YR.CARD.ID = ""
    IF CHECK.CARD THEN
        TAG.LIST = RAISE(R.IB.PARAMETER.SB<IB.PARM.CARD.NUMBER>)
        LOOP
            REMOVE TAG.ID FROM TAG.LIST SETTING YPOS
        WHILE TAG.ID DO
            LOCATE TAG.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING TAG.POS THEN
                YR.CARD.ID := MSG.DATA<MSG.TAG.VALUE,TAG.POS>
            END
        REPEAT

        YR.CARD.ID = TRIM(TRIM(YR.CARD.ID, "0", "L"))

        CALL IB.CALC.CHECK.DIGIT.SB(YR.CARD.ID )

        YMSG = "YR.CARD.ID=" :  YR.CARD.ID
        GOSUB LOG.ERROR
    END

    YMSG = "BEGIN PROCESS : ACCOUNT.ID=" : YR.ACCOUNT.ID : " CARD.NUMBER=" : YR.CARD.ID
    GOSUB LOG.ERROR

    IF YR.INT.ACCT.SET THEN RETURN

    IF NOT(YR.ACCOUNT.ID) THEN
        ETEXT = "ACCOUNT NUMBER NOT FOUND @ TAG " : IB.BAL.ACCT.TAG
        Y.CARD.STATUS = 4
        GOSUB LOG.ERROR
        YR.ERROR.IN.APPLICATION = FAIL.ACCT.NOT.FOUND
        GOSUB RETURN.ERROR.RECORD
        RETURN
    END

    IF CHECK.CARD THEN
        IF NOT(YR.CARD.ID) THEN
            ETEXT = "CARD NUMBER NOT FOUND @ TAG " : IB.BAL.CARD.TAG
            GOSUB LOG.ERROR
            Y.CARD.STATUS = 4
            YR.ERROR.IN.APPLICATION = FAIL.CARD.NOT.FOUND
            GOSUB RETURN.ERROR.RECORD
        END
    END

    BRANCH.CODE = YR.ACCOUNT.ID[1,3]
    LOCATE BRANCH.CODE IN R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE,1> SETTING BR.CODE THEN
        YR.COMPANY.ID = R.INTERCO.PARAMETER<ST.ICP.COMPANY,BR.CODE>
        IF YR.COMPANY.ID THEN
            IF YR.COMPANY.ID <> ID.COMPANY THEN
                IF YR.COMPANY.ID MATCHES "2A7N" THEN
                    CALL LOAD.COMPANY(YR.COMPANY.ID)
                END ELSE
                    YMSG = "INVALID COMPANY - " : YR.COMPANY.ID
                    GOSUB LOG.ERROR
                END
            END
        END
        MNE =  R.INTERCO.PARAMETER<ST.ICP.FIN.MNEMONIC,BR.CODE>
        IF MNE THEN
            GOSUB OPEN.FILES
        END ELSE
            ETEXT = "INVALID ACCOUNT " : YR.ACCOUNT.ID : " COMPANY NOT FOUND"
            GOSUB LOG.ERROR
            Y.CARD.STATUS = 4
            YR.ERROR.IN.APPLICATION = FAIL.DUE.TO.TECH.ERROR
            GOSUB RETURN.ERROR.RECORD
            RETURN
        END
    END

    IF IN.MSG.TYPE[1,1] <> 1 THEN
        JUST.GET.BALANCE = 1
        GOSUB RETURN.OUT.MSG
        RETURN
    END


    Y.READ.ACCT = 0
    R.ACCOUNT = ""
    IF YR.OPEN.FILES THEN
        READ R.ACCOUNT FROM F.ACCOUNT, YR.ACCOUNT.ID ELSE YERR="RECORD NOT FOUND"
        IF R.ACCOUNT THEN
            Y.READ.ACCT = 1
            IF R.ACCOUNT< AC.POSTING.RESTRICT > THEN
                M.POSTING.RESTRICT.ID = R.ACCOUNT< AC.POSTING.RESTRICT >
                CALL F.READ(FN.POSTING.RESTRICT, M.POSTING.RESTRICT.ID, R.POSTING.RESTRICT, F.POSTING.RESTRICT, "")
                IF R.POSTING.RESTRICT<AC.POS.RESTRICTION.TYPE> EQ "DEBIT" OR R.POSTING.RESTRICT<AC.POS.RESTRICTION.TYPE> EQ "ALL" THEN
                    YMSG = YR.ACCOUNT.ID : " ACCOUNT HAS POSTING RESTRICTION : " : R.ACCOUNT< AC.POSTING.RESTRICT >  : " TYPE " : R.POSTING.RESTRICT<AC.POS.RESTRICTION.TYPE>
                    IF YR.INTERFACE <> "FILE" THEN
                        Y.CARD.STATUS = 4
                        GOSUB LOG.ERROR
                        YR.ERROR.IN.APPLICATION = FAIL.CARD.ACCT.RESTRICT
                        GOSUB RETURN.ERROR.RECORD
                        RETURN
                    END
                END
            END
        END
    END

    YR.CUSTOMER.ID = R.ACCOUNT<AC.CUSTOMER>

    IF NOT(Y.READ.ACCT) THEN
        YMSG = "ACCOUNT NOT FOUND " : YR.ACCOUNT.ID  : " " : YERR
        Y.CARD.STATUS = 4
        GOSUB LOG.ERROR
        YR.ERROR.IN.APPLICATION = FAIL.ACCT.NOT.FOUND
        GOSUB RETURN.ERROR.RECORD
        RETURN
    END


    YCARD.NO = YR.CARD.ID
    YACCT.ID = YR.ACCOUNT.ID
    YRETURN = ""

    IF CHECK.CARD THEN

        YMSG = "CALLING CARD.VALIDATE FOR ACCOUNT=" : YACCT.ID : " AND CARD " : YCARD.NO
        GOSUB LOG.ERROR
        YRETURN = ""
        CALL IB.VALIDATE.CARD.SB( YCARD.NO, YACCT.ID, YRETURN)

        YMSG = "Y.CARD.STATUS=" : Y.CARD.STATUS : " YRETURN=" : YRETURN
        GOSUB LOG.ERROR

        IF R.IB.MSG.GRP.SB<IB.MSG.GRP.VALIDATE.CARD>[1,1] = "Y" AND YRETURN = "-1" THEN
            YMSG = "RETURN ZERO BALANCE "
            YR.ERROR.IN.APPLICATION = FAIL.CARD.ACCT.RESTRICT
            GOSUB RETURN.ERROR.RECORD
            GOSUB LOG.ERROR
            RETURN
        END
        YACCT.LIST =RAISE( R.CARD.ISSUE<14,51>)
        YMSG = "ACCOUNT.LIST=" : YACCT.LIST
        GOSUB LOG.ERROR

        YACCOUNT.PROCESSED = ""
    END ELSE
        YACCT.LIST = YR.ACCOUNT.ID
        JUST.GET.BALANCE =1
    END

    GOSUB RETURN.OUT.MSG

    RETURN

SET.INT.ACCT:

    YR.ACCOUNT.ID = LCCY : RIGHT(YR.ACCOUNT.ID,9)

SET.S96.COMPANY:

    YR.INT.ACCT.SET = 1
    YR.COMPANY.ID = "MZ0010196"
    IF YR.COMPANY.ID <> ID.COMPANY THEN
        CALL LOAD.COMPANY(YR.COMPANY.ID)
    END
    CHECK.CARD = 0
    MNE = "S96"
    GOSUB OPEN.FILES

    RETURN

RETURN.OUT.MSG:

    GOSUB MAIN.ACCOUNT.PROCESS

    IF JUST.GET.BALANCE THEN
        RETURN
    END

    IF NOT( Y.CARD.STATUS ) THEN
        IF YR.MESSAGE.EVENT = "BALANCE" THEN
            GOSUB PROCESS.LINKED.ACCOUNTS
        END

        IF YR.MESSAGE.EVENT = "STATEMENT" THEN
            YMSG = "PROCESSING STATEMENT REQUEST"
            GOSUB LOG.ERROR
            CALL IB.GET.LAST.TEN.TRANS.SB( YR.ACCOUNT.ID, R.IB.ATM.BALANCE.SB, YR.MINI.STMT.NO)
        END
    END

    REPLY.MSG.TYPE = IN.MSG.TYPE + 100
    CALL CACHE.READ(FN.IB.MSG.GRP.SB,  REPLY.MSG.TYPE, R.IB.MSG.GRP.SB, YERR)
    IF YERR THEN
        ETEXT = "RESPONSE MESSAGE NOT SET-UP FOR MESSAGE " : IN.MSG.TYPE : " --> " :  REPLY.MSG.TYPE
        GOSUB LOG.ERROR
        RETURN
    END

    YMSG = "CALLING IB.BUILD.RETURN.DATA FOR REPLY MESSAGE : " : REPLY.MSG.TYPE

    GOSUB LOG.ERROR

    CALL IB.BUILD.RETURN.DATA( REPLY.MSG.TYPE )

    RETURN.DATA =  REPLY.MSG.TYPE

    RETURN

BYPASS.CHECKS.RETURN.BAL:

    RETURN

RETURN.ERROR.RECORD:

    YR.ACCOUNT.ID = "0"
    AVAIL.BAL = 0
    YCCY.CODE = 0
    CURR.BAL = 0
    YR.IN.ID = "0"
    GOSUB RETURN.OUT.MSG

    RETURN

MAIN.ACCOUNT.PROCESS:


    IF YR.ACCOUNT.ID THEN
        YAC.ID = YR.ACCOUNT.ID
        READ R.ACCOUNT FROM F.ACCOUNT, YR.ACCOUNT.ID ELSE YERR="RECORD NOT FOUND"
        YR.CUSTOMER.ID = R.ACCOUNT<AC.CUSTOMER>
        CALL IB.ATM.GET.BALANCE.SB( YAC.ID )
        YACCOUNT.PROCESSED<-1> =  YAC.ID
        YR.IN.ID = ""
        CALL IB.FMT.ACCOUNT.SB( YAC.ID, YR.IN.ID)
    END ELSE
        YR.IN.ID = 0
    END


    GOSUB FMT.BALANCE

    R.IB.ATM.BALANCE.SB<IB.BAL.ACCT.ID>= YR.IN.ID
    R.IB.ATM.BALANCE.SB<IB.BAL.AVAIL.BAL>= FMT.AVAIL.BAL
    R.IB.ATM.BALANCE.SB<IB.BAL.ACCT.CCY>= YCCY.CODE
    R.IB.ATM.BALANCE.SB<IB.BAL.SIGN>= IFS(AVAIL.BAL < 0, "D", "C")
    R.IB.ATM.BALANCE.SB<IB.BAL.LED.BAL>= FMT.CURR.BAL
    R.IB.ATM.BALANCE.SB<IB.BAL.LED.BAL.SIGN>= IFS(CURR.BAL < 0, "D", "C")

    YMSG="MAIN ACCOUNT PROCESS COMPLETE FOR ACCOUNT : " :  YR.ACCOUNT.ID
    GOSUB LOG.ERROR
    YMSG = "R.IB.ATM.BALANCE.SB=":R.IB.ATM.BALANCE.SB
    GOSUB LOG.ERROR

    RETURN

PROCESS.LINKED.ACCOUNTS:

    YMSG = "PROCESSING LIKED ACCOUNTS : " : RAISE(RAISE(YACCT.LIST))
    GOSUB LOG.ERROR

    CNT = 1
    NO.OF.ACCTS = DCOUNT(YACCT.LIST<1>, VM)
    FOR NN = 1 TO NO.OF.ACCTS
        YAC.ID = YACCT.LIST<1,NN>
        LOCATE YAC.ID IN YACCOUNT.PROCESSED SETTING POS ELSE
            YACCOUNT.PROCESSED<-1> = YAC.ID
            GOSUB INT.ACT.BAL
            CALL IB.ATM.GET.BALANCE.SB( YAC.ID )
            GOSUB FILL.BALANCES
            CNT += 1
        END
    NEXT NN

    RETURN

FMT.BALANCE:

    FMT.AVAIL.BAL =AVAIL.BAL
    IF AVAIL.BAL < 0 THEN
        FMT.AVAIL.BAL *= -1
    END
    FMT.CURR.BAL = CURR.BAL
    IF FMT.CURR.BAL < 0 THEN
        FMT.CURR.BAL *= -1
    END
    RETURN

INT.ACT.BAL:

    AVAL.BAL = 0
    YCCY.CODE = 0
    CURR.BAL = 0
    RETURN

FILL.BALANCES:

    YMSG = "UPDATING ACCOUNT " : YAC.ID
    GOSUB LOG.ERROR

    IF YAC.ID THEN
        YR.IN.ID = ""
        CALL IB.FMT.ACCOUNT.SB( YAC.ID, YR.IN.ID)
    END ELSE
        YR.IN.ID = 0
    END

    GOSUB FMT.BALANCE

    R.IB.ATM.BALANCE.SB<IB.BAL.ACCT.ID.2,CNT>= YR.IN.ID
    R.IB.ATM.BALANCE.SB<IB.BAL.AVAIL.BAL.2,CNT>= FMT.AVAIL.BAL
    R.IB.ATM.BALANCE.SB<IB.BAL.ACCT.CCY.2,CNT>= YCCY.CODE
    R.IB.ATM.BALANCE.SB<IB.BAL.SIGN.2,CNT>= IFS(AVAIL.BAL < 0, "D", "C")
    R.IB.ATM.BALANCE.SB<IB.BAL.LED.BAL.2,CNT>= FMT.CURR.BAL
    R.IB.ATM.BALANCE.SB<IB.BAL.LED.BAL.SIGN.2,CNT>= IFS(CURR.BAL < 0, "D", "C")
    R.IB.ATM.BALANCE.SB<IB.BAL.VER.DADOSV,CNT>= 0

    R.IB.ATM.BALANCE.SB<IB.BAL.ACCT.ID.3,CNT>=0
    R.IB.ATM.BALANCE.SB<IB.BAL.AVAIL.BAL.3,CNT>= 0
    R.IB.ATM.BALANCE.SB<IB.BAL.ACCT.CCY.3,CNT>=0
    R.IB.ATM.BALANCE.SB<IB.BAL.SIGN.3,CNT>="C"
    R.IB.ATM.BALANCE.SB<IB.BAL.LED.BAL.3,CNT>= 0
    R.IB.ATM.BALANCE.SB<IB.BAL.LED.BAL.SIGN.3,CNT>="C"

    YMSG = "DONE LIKED ACCOUNT"
    GOSUB LOG.ERROR
    YMSG = "R.IB.ATM.BALANCE.SB=" :  R.IB.ATM.BALANCE.SB
    GOSUB LOG.ERROR

    RETURN

OPEN.FILES:

    YR.OPEN.FILES = 0

    FN.ACCOUNT = "F" : MNE : ".ACCOUNT" : FM : "NO.FATAL.ERROR"
    F.ACCOUNT = ""
    CALL OPF(FN.ACCOUNT, F.ACCOUNT)

    FN.CARD.ISSUE = "F" : MNE : ".CARD.ISSUE" : FM : "NO.FATAL.ERROR"
    F.CARD.ISSUE = ""
    CALL OPF(FN.CARD.ISSUE, F.CARD.ISSUE)

    YMSG = "FILES " :  FN.ACCOUNT : " AND " :  FN.CARD.ISSUE : " OPENED WITH ETEXT=" : ETEXT
    GOSUB LOG.ERROR

    IF FN.ACCOUNT AND FN.CARD.ISSUE THEN
        YR.OPEN.FILES = 1
    END

    RETURN

LOG.ERROR:
    IF ETEXT THEN
        IB.LOG.LEVEL = "ERROR"
    END ELSE
        ETEXT = YMSG
    END
    IN.PROCESS.ERROR = 1
    CALL IB.ATM.LOG.ERROR( SYSTEM(40) )
    IB.LOG.LEVEL = "DEBUG"
    ETEXT = ""
    RETURN

INITIALISE:

    G$THIS = "IB.ATM.PROCESS.BALANCE.SB"

    IB.LOG.LEVEL = "DEBUG"

    R.IB.ATM.BALANCE.SB = ""

    YACCT.LIST = ""

    GET.BALANCE.ONLY = ""

    GET.BALANCE.ONLY = Y.SEND.ZERO.BAL<2>

    Y.SEND.ZERO.BAL = Y.SEND.ZERO.BAL<1>

    YR.INT.ACCT.SET = 0

    FN.POSTING.RESTRICT = "F.POSTING.RESTRICT" : FM : "NO.FATAL.ERROR"
    F.POSTING.RESTRICT = ""
    CALL OPF(FN.POSTING.RESTRICT, F.POSTING.RESTRICT)

    RETURN

END
