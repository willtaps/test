    SUBROUTINE IB.VALIDATE.CARD.SB ( CARD.NO, YACCT.NO, YRETURN)
*
    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.CARD.ISSUE
    $INCLUDE I_F.INTERCO.PARAMETER
    $INCLUDE I_F.CARD.STATUS
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE IB.BP I_IB.TAG.SB.COMMON
    $INCLUDE IB.BP I_F.IB.PARAMETER.SB

    G$THIS = "IB.VALIDATE.CARD.SB"

*
    GOSUB INITIALISE

    GOSUB PROCESS

    IF Y.CARD.STATUS THEN
        YRETURN = "-1"
    END

    RETURN

*----------
INITIALISE:
*----------

    Y.CARD.STATUS = 6

    R.CARD.ISSUE = ""

    YCONTINUE = 1

    BRANCH.CODE = YACCT.NO[1,3]

    CARD.TYPE.LIST = RAISE(R.IB.PARAMETER.SB<IB.PARM.CARD.TYPES>)

    R.CARD.ISSUE = ""

    RETURN

GET.CARD.FROM.COMP:

    CALL IB.READ.CARD.SB( CARD.NO )
    M.CARD.ISSUE.ID = CARD.NO

    RETURN

GET.NEW.CARD:

    LOCATE BRANCH.CODE IN R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE,1> SETTING BR.POS THEN
        MNE = R.INTERCO.PARAMETER< ST.ICP.FIN.MNEMONIC, BR.POS >
    END
    IF NOT(MNE) THEN
        ETEXT = "INVALID ACCOUNT - BRANCH NOT FOUND"
        GOSUB LOG.ERROR
        Y.CARD.STATUS = 4
        YCONTINUE = 0
        RETURN
    END

    FN.CARD.ISSUE = "F" : MNE : ".CARD.ISSUE" : FM : "NO.FATAL.ERROR"
    F.CARD.ISSUE = ""
    CALL OPF(FN.CARD.ISSUE, F.CARD.ISSUE)

    FN.CARD.ISSUE.ACCOUNT = "F" : MNE : ".CARD.ISSUE.ACCOUNT" : FM : "NO.FATAL.ERROR"
    F.CARD.ISSUE.ACCOUNT = ""
    CALL OPF(FN.CARD.ISSUE.ACCOUNT, F.CARD.ISSUE.ACCOUNT)

    LOOP
        REMOVE M.CARD.TYPE.ID  FROM CARD.TYPE.LIST SETTING POS
    WHILE M.CARD.TYPE.ID : POS DO
        M.CARD.ISSUE.ID = M.CARD.TYPE.ID : "." : CARD.NO
        YMSG = "CARD.ID=" : M.CARD.ISSUE.ID
        GOSUB LOG.ERROR
        CALL F.READ(FN.CARD.ISSUE, M.CARD.ISSUE.ID, R.CARD.ISSUE, F.CARD.ISSUE, YERR)
        IF R.CARD.ISSUE THEN
            EXIT
        END
    REPEAT

    RETURN

*-------
PROCESS:
*-------

    GOSUB GET.CARD.FROM.COMP

    IF R.CARD.ISSUE = "" THEN
        GOSUB GET.NEW.CARD
        IF NOT(YCONTINUE) THEN
            RETURN
        END
    END

    IF R.CARD.ISSUE THEN
        ACCOUNT.LIST = R.CARD.ISSUE<CARD.IS.ACCOUNT> : @VM : RAISE(R.CARD.ISSUE<14,51>)
        IF YACCT.NO THEN
            LOCATE YACCT.NO IN ACCOUNT.LIST<1,1> SETTING POS ELSE
                YMSG = "ACCOUNT + CARD MIS-MATCH " : YACCT.NO : " NOT FOUND IN --> " :  ACCOUNT.LIST
                GOSUB LOG.ERROR
                Y.CARD.STATUS = 4
                RETURN
            END
        END

        CARD.FOUND = 1

        IF R.CARD.ISSUE< CARD.IS.CAN.REASON >  THEN
            M.CARD.STATUS.ID = R.CARD.ISSUE< CARD.IS.CAN.REASON >
            CALL CACHE.READ(FN.CARD.STATUS, M.CARD.STATUS.ID, R.CARD.STATUS, YERR)
            IF R.CARD.STATUS THEN
                Y.CARD.STATUS = R.CARD.STATUS<CARD.STS.LOCAL.REF,1>
                YMSG = "Y.CARD.STATUS=" : Y.CARD.STATUS : " GET.VALUE FROM CANC.REASON"
                GOSUB LOG.ERROR
            END ELSE
                YMSG = "CARD.STATUS " : M.CARD.STATUS.ID : " FROM CARD.REASON  NOT SET-UP"
                GOSUB LOG.ERROR
            END
        END

        IF R.CARD.ISSUE<CARD.IS.EXPIRY.DATE> LT TODAY THEN
            ETEXT = "CARD EXPIRED"
            YMSG = ETEXT
            GOSUB LOG.ERROR
            Y.CARD.STATUS = 7
        END

        CALL CACHE.READ(FN.CARD.STATUS, R.CARD.ISSUE<CARD.IS.CARD.STATUS>, R.CARD.STATUS, YERR)
        IF R.CARD.STATUS THEN
            Y.CARD.STATUS = R.CARD.STATUS<CARD.STS.LOCAL.REF,1>
            YMSG = "CARD.STATUS =" :  Y.CARD.STATUS : " READ FROM CARD.STATUS"
            GOSUB LOG.ERROR
        END

    END

    IF NOT(CARD.FOUND) THEN
        ETEXT = "CARD NOT FOUND"
        YMSG = ETEXT
        GOSUB LOG.ERROR
        Y.CARD.STATUS = 7
    END

    RETURN

LOG.ERROR:

    IF ETEXT THEN
        IB.LOG.LEVEL = "ERROR"
    END ELSE
        ETEXT = YMSG
        IB.LOG.LEVEL = "DEBUG"
    END

    YRETURN = 1

    CALL IB.ATM.LOG.ERROR( G$THIS )
    ETEXT = ""
    IB.LOG.LEVEL = "DEBUG"

    RETURN

END
