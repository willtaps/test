    SUBROUTINE IB.GET.CR.ACCT.SB( YACC.NO, USER.INFO )

    $INCLUDE I_COMMON
    $INCLUDE I_ENQUIRY.COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.INTERCO.PARAMETER
    $INCLUDE I_F.ACCOUNT
    $INCLUDE I_F.FUNDS.TRANSFER
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE IB.BP I_F.IB.OPE.TYPES.SB
    $INCLUDE IB.BP I_F.IB.MESSAGE.TAG.SB
    $INCLUDE IB.BP I_F.IB.TAG.GRP.SB
    $INCLUDE IB.BP I_F.IB.PARAMETER.SB
    $INSERT I_F.IB.OPE.TYPES.SB
    $INSERT I_F.IB.MSG.GRP.SB
    $INSERT I_F.IB.ATM.POS.LINK.SB
    $INSERT I_F.IB.BILL.PAYMENTS.ENTITY

    COM/IB.FILE/YR.MESSAGE.ARRAY,YR.INTERFACE,R.IB.FILE.TAGS.SB,POS.PL

    OWN.BANK.ID = R.IB.PARAMETER.SB< IB.PARM.OWN.BANK.CODE >

    BEGIN CASE

    CASE IN.MSG.TYPE[1,1] = "S"
        GOSUB SET.ERMB.SUMM.ACCTS

    CASE IN.MSG.TYPE = "2EORI"
        GOSUB SET.EORI.ACCTS

    CASE YR.MESSAGE.EVENT = "CASH.WITHDRAWAL" OR YR.MESSAGE.EVENT = "BUY.POS" OR YR.MESSAGE.EVENT = "ADVANCE"
        GOSUB GET.CR.OR.DR.ACCT

    CASE YR.MESSAGE.EVENT = "POS.CLOSURE"
        GOSUB PROCESS.FILE.ACCOUNTS

    CASE YR.MESSAGE.EVENT = "BILL.PAYMENT"
        M.IB.MESSAGE.TAG.SB.ID = IB.BILL.PAY.ID.TAG
        GOSUB GET.TAG.VALUE
        M.IB.BILL.PAYMENTS.ENTITY.ID = TAG.VALUE
        CALL CACHE.READ("F.IB.BILL.PAYMENTS.ENTITY", M.IB.BILL.PAYMENTS.ENTITY.ID, R.IB.BILL.PAYMENTS.ENTITY, YERR)
        IF YERR THEN
            Y.CARD.STATUS = 6
            YMSG = M.IB.BILL.PAYMENTS.ENTITY.ID : " RECORD NOT FOUND IN IB.BILL.PAYMENTS.ENTITY"
            GOSUB LOG.ERROR
        END ELSE
            YACC.NO = R.IB.BILL.PAYMENTS.ENTITY< IB.ENTITY.ACCOUNT >
        END

    CASE YR.MESSAGE.EVENT = "INT.BANK.TRF.BEN"
        GOSUB GET.CR.OR.DR.ACCT
        R.RECORD<FT.DEBIT.ACCT.NO> = YACC.NO
        GOSUB GET.NAB.ACCOUNT

    CASE YR.MESSAGE.EVENT = "INT.BANK.TRF.PAY"
        GOSUB GET.TRANSFER.SUSP

    CASE OTHERWISE

    END CASE

    RETURN

GET.TRANSFER.SUSP:

    M.IB.MESSAGE.TAG.SB.ID = IB.NIB.ACCT.TAG
    GOSUB GET.TAG.VALUE
    NIB.ID = TAG.VALUE

    M.IB.MESSAGE.TAG.SB.ID = IB.TERMINAL.ID.TAG
    GOSUB GET.TAG.VALUE
    YTERM.ID = TAG.VALUE

    M.IB.MESSAGE.TAG.SB.ID = IB.TERM.TYPE.TAG
    GOSUB GET.TAG.VALUE
    YTERM.TYPE = TAG.VALUE

    ATM.POS = ""
    BEGIN CASE
    CASE YTERM.TYPE = "A"
        ATM.POS = "ATM"
    CASE YTERM.TYPE = "B"
        ATM.POS = "POS"
    CASE OTHERWISE
        ATM.POS = "POS"
    END CASE

    IF NIB.ID[1,4] = OWN.BANK.ID THEN
        M.LINK.ID = NIB.ID[1,4] : "." : YTERM.ID
    END ELSE
        M.LINK.ID ="00": NIB.ID[3,2] : "." : ATM.POS
    END
    YMSG = " M.LINK.ID=" :  M.LINK.ID
    GOSUB LOG.ERROR

    CALL CACHE.READ("F.IB.ATM.POS.LINK.SB", M.LINK.ID, R.IB.ATM.POS.LINK.SB, YERR)
    IF YERR THEN
        YMSG = "ERR0R: RECORD " : M.LINK.ID : " : NOT FOUND ON FILE IB.ATM.POS.LINK.SB"
        GOSUB LOG.ERROR
    END

    YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.TRF.SUS.ACCT>
    YMSG = "YACC.NO =" : YACC.NO : " YERR=" : YERR
    GOSUB LOG.ERROR
    RETURN

GET.NAB.ACCOUNT:

    M.IB.MESSAGE.TAG.SB.ID = IB.NIB.ACCT.TAG
    GOSUB GET.TAG.VALUE
    NIB.ID = TAG.VALUE
    IF NIB.ID[1,4] =  OWN.BANK.ID THEN
        CALL CACHE.READ("F.SB.NIB.ACCOUNT", NIB.ID , R.SB.NIB.ACCOUNT, YERR)
        IF R.SB.NIB.ACCOUNT THEN
            YACC.NO = R.SB.NIB.ACCOUNT<1>
        END
    END ELSE
        M.IB.MESSAGE.TAG.SB.ID = IB.TERMINAL.ID.TAG
        GOSUB GET.TAG.VALUE
        YTERM.ID = TAG.VALUE

        M.IB.MESSAGE.TAG.SB.ID = IB.TERM.TYPE.TAG
        GOSUB GET.TAG.VALUE
        YTERM.TYPE = TAG.VALUE

        ATM.POS = ""
        BEGIN CASE
        CASE YTERM.TYPE = "A"
            ATM.POS = "ATM"
        CASE YTERM.TYPE = "B"
            ATM.POS = "POS"
        CASE OTHERWISE
            ATM.POS = "POS"
        END CASE

        YMSG = " NIB.ID=" :  NIB.ID
        M.LINK.ID ="00": NIB.ID[3,2] : "." : ATM.POS
        YMSG = " M.LINK.ID=" :  M.LINK.ID
        GOSUB LOG.ERROR
        YERR = ""
        CALL CACHE.READ("F.IB.ATM.POS.LINK.SB", M.LINK.ID, R.IB.ATM.POS.LINK.SB, YERR)
        IF YERR THEN
            YMSG = "ERR0R: RECORD " : M.LINK.ID : " : NOT FOUND ON FILE IB.ATM.POS.LINK.SB"
            GOSUB LOG.ERROR
        END
        YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.CB.SUS.ACCT>
        YMSG = "YACC.NO =" : YACC.NO : " YERR=" : YERR
        GOSUB LOG.ERROR
    END

    RETURN

GET.CR.OR.DR.ACCT:

    M.IB.MESSAGE.TAG.SB.ID = IB.BANK.ID.CODE.TAG
    GOSUB GET.TAG.VALUE
    YBANK.ID = TAG.VALUE

    M.IB.MESSAGE.TAG.SB.ID = IB.TERMINAL.ID.TAG
    GOSUB GET.TAG.VALUE
    YTERM.ID = TAG.VALUE

    M.IB.MESSAGE.TAG.SB.ID = IB.TERM.TYPE.TAG
    GOSUB GET.TAG.VALUE
    YTERM.TYPE = TAG.VALUE

    ATM.POS = ""
    BEGIN CASE
    CASE YTERM.TYPE = "A"
        ATM.POS = "ATM"
    CASE YTERM.TYPE = "B"
        ATM.POS = "POS"
    CASE OTHERWISE
        ATM.POS = "POS"
    END CASE

    YMSG = " OWN.BANK.ID=" :  OWN.BANK.ID
    IF YBANK.ID = OWN.BANK.ID THEN
        M.LINK.ID = OWN.BANK.ID : "." :  YTERM.ID
        USER.INFO.POS  = IB.LINK.US.ON.US
    END ELSE
        M.LINK.ID = YBANK.ID : "." : ATM.POS
        USER.INFO.POS = IB.LINK.US.ON.THEM
    END

    YMSG = " M.LINK.ID=" :  M.LINK.ID
    GOSUB LOG.ERROR
    YERR = ""
    CALL CACHE.READ("F.IB.ATM.POS.LINK.SB", M.LINK.ID, R.IB.ATM.POS.LINK.SB, YERR)
    IF YERR THEN
        YMSG = "ERR0R: RECORD " : M.LINK.ID : " : NOT FOUND ON FILE IB.ATM.POS.LINK.SB"
        GOSUB LOG.ERROR
    END

    BEGIN CASE

    CASE ATM.POS = "ATM"
        IF YR.MESSAGE.EVENT = "INT.BANK.TRF.BEN" THEN
            YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.TRF.SUS.ACCT>
        END ELSE
            IF YBANK.ID EQ OWN.BANK.ID THEN
                YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.CASH.INT.ACCT>
            END ELSE
                YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.UOT.SUSP.ACCT>
            END
        END

    CASE ATM.POS = "POS"
        IF YBANK.ID EQ OWN.BANK.ID THEN
            YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.MRCH.SUSP.ACCT>
        END ELSE
            YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.UOT.SUSP.ACCT>
        END
    END CASE

    YMSG = "YACC.NO =" : YACC.NO : " YERR=" : YERR
    GOSUB LOG.ERROR

    USER.INFO = R.IB.ATM.POS.LINK.SB<USER.INFO.POS>

    RETURN

GET.TAG.VALUE:

    TAG.VALUE = ""
    LOCATE M.IB.MESSAGE.TAG.SB.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
        TAG.VALUE = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
    END

    RETURN

PROCESS.FILE.ACCOUNTS:

    BEGIN CASE

    CASE IN.MSG.TYPE = "3EDST"
        GOSUB GET.CR.OR.DR.ACCT
        IF NOT(POS.PL) THEN
            DR.ACCT = R.RECORD<FT.DEBIT.ACCT.NO>
            R.RECORD<FT.DEBIT.ACCT.NO> = YACC.NO
            YACC.NO = DR.ACCT
        END ELSE
            YACC.NO = "PL":R.IB.ATM.POS.LINK.SB<IB.LINK.EDST.PL.CATEG>
        END
    CASE IN.MSG.TYPE = "6EDST"
        LOCATE "318" IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            YSIGN = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
        END
        YACCT = R.RECORD<FT.DEBIT.ACCT.NO>
        SUS.ACCT = R.IB.ATM.POS.LINK.SB<IB.LINK.EDST.SUS.ACCT>
        IF YSIGN = "C" THEN
            R.RECORD<FT.DEBIT.ACCT.NO> = SUS.ACCT
            R.RECORD<FT.CREDIT.ACCT.NO> = YACCT
            YACC.NO = YACCT
        END ELSE
            R.RECORD<FT.DEBIT.ACCT.NO> = YACCT
            R.RECORD<FT.CREDIT.ACCT.NO> = SUS.ACCT
            YACC.NO = SUS.ACCT
        END
    END CASE

    RETURN

SET.EORI.ACCTS:

    GOSUB SET.ERMB.SUMM.ACCTS

    RETURN

SET.ERMB.SUMM.ACCTS:

    GOSUB GET.CR.OR.DR.ACCT
    R.RECORD<FT.DEBIT.ACCT.NO> = R.IB.ATM.POS.LINK.SB<IB.LINK.TOU.SUSP.ACCT>
    R.RECORD<FT.CREDIT.ACCT.NO> = R.IB.ATM.POS.LINK.SB<IB.LINK.CASH.INT.ACCT>
    YACC.NO = R.IB.ATM.POS.LINK.SB<IB.LINK.CASH.INT.ACCT>

    YR.ID.COMPANY = "MZ001" : RIGHT(YTERM.ID ,4)
    LOCATE YR.ID.COMPANY IN R.INTERCO.PARAMETER<ST.ICP.COMPANY,1> SETTING COM.POS THEN
        CALL LOAD.COMPANY(YR.ID.COMPANY)
        FN.ACCOUNT = "F.ACCOUNT" : FM : "NO.FATAL.ERROR"
        F.ACCOUNT = ""
        CALL OPF(FN.ACCOUNT, F.ACCOUNT)
    END ELSE
        YMSG = "INVALID COMPANY.ID DERIVED FROM TERMINAL.ID [" : YTERM.ID : "]"
        GOSUB LOG.ERROR
    END

    RETURN

LOG.ERROR:

    IF ETEXT THEN
        IB.LOG.LEVEL = "ERROR"
    END ELSE
        ETEXT = YMSG
    END

    CALL IB.ATM.LOG.ERROR( SYSTEM(40))

    ETEXT = ""

    IB.LOG.LEVEL = "DEBUG"

    RETURN

END
