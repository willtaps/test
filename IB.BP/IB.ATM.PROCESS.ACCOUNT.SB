    SUBROUTINE IB.ATM.PROCESS.ACCOUNT.SB

    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.INTERCO.PARAMETER
    $INCLUDE I_F.ACCOUNT
    $INCLUDE I_F.CARD.ISSUE
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE IB.BP I_IB.TAG.SB.COMMON
    $INCLUDE IB.BP I_F.IB.MSG.GRP.SB
    $INCLUDE IB.BP I_F.IB.ATM.BALANCE.SB

    GOSUB INITIALISE

    GOSUB PROCESS

    RETURN

PROCESS:

    YMSG = "GET ACCOUNT RECORD BEGIN"
    GOSUB LOG.ERROR
    Y.SEND.ZERO.BAL = 0
    JUST.GET.BALANCE = 1
    CALL IB.ATM.PROCESS.BALANCE.SB
    IF Y.CARD.STATUS THEN
        Y.SEND.ZERO.BAL = 1
        CALL IB.ATM.PROCESS.BALANCE.SB
        YMSG = "CARD.STATUS = " : Y.CARD.STATUS : " RETURN ZEROS"
        GOSUB LOG.ERROR
    END ELSE
        LOCATE IB.BAL.ACCT.TAG IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            YR.IN.ID = MSG.DATA<MSG.TAG.VALUE,POS>
            YR.IN.ID = TRIM(YR.IN.ID)
            YR.ACCOUNT.ID = ""
            CALL IB.FMT.ACCOUNT.SB( YR.ACCOUNT.ID, YR.IN.ID)
            READ R.ACCOUNT FROM F.ACCOUNT, YR.ACCOUNT.ID THEN
                YMSG = "ACCOUNT READ OKAY WITH CUST = " : R.ACCOUNT<1>
                GOSUB LOG.ERROR
                ID.NEW = YR.ACCOUNT.ID
            END
        END
    END

    RETURN

LOG.ERROR:

    IF ETEXT THEN
        IB.LOG.LEVEL = "ERROR"
    END ELSE
        ETEXT = YMSG
    END
    IN.PROCESS.ERROR = 1
    CALL IB.ATM.LOG.ERROR( SYSTEM(40) )
    IB.LOG.LEVEL = "DEBUG"
    ETEXT = ""
    RETURN

INITIALISE:

    RETURN

END
