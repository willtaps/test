    SUBROUTINE IB.ATM.OFS.SB ( IN.MSG )

    $INCLUDE I_COMMON
    $INCLUDE I_ENQUIRY.COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.INTERCO.PARAMETER
    $INCLUDE I_F.ACCOUNT
    $INCLUDE I_F.FUNDS.TRANSFER
    $INCLUDE I_F.AC.LOCKED.EVENTS
    $INCLUDE I_F.USER
    $INCLUDE I_F.CARD.ISSUE
    $INCLUDE I_F.FT.TXN.TYPE.CONDITION
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE IB.BP I_IB.TAG.SB.COMMON
    $INCLUDE IB.BP I_F.IB.MESSAGE.TAG.SB
    $INCLUDE IB.BP I_F.IB.TAG.GRP.SB
    $INCLUDE IB.BP I_F.IB.PARAMETER.SB
    $INCLUDE IB.BP I_F.IB.ATM.BALANCE.SB
    $INCLUDE IB.BP I_F.IB.OFS.USER.SB
    $INCLUDE IB.BP I_F.IB.ATM.POS.LINK.SB
    $INCLUDE OFS.BP I_F.OFS.USER.SB
    $INSERT I_F.IB.MSG.GRP.SB
    $INCLUDE IB.BP I_F.IB.ATM.MESSAGE.LOG.SB
    $INCLUDE BSTM.BP I_F.BSTM.CHEQUE.REQUEST
    $INCLUDE ATM.BP I_F.ATM.MAPPING.SB


    GOSUB INITIALISE

    GOSUB CHECK.TRANSACTION

    GOSUB PROCESS

    RETURN

INITIALISE:

    R.RECORD = ""
    APP.NAME = ""
    VER.NAME = ""
    TXN.TYPE = ""
    GTSMODE = 0
    NO.OF.AUTH = 0
    TRANSACTION.ID = ""
    USER.INFO = "UU1011"
    USER.INFO<2> = 123456
    ETEXT = ""
    R.RECORD = ""
    CARD.TAG.ID = 238
    SET.WAIVE = 1
    OFS.COMPANY = ""
    R.CARD.ISSUE = ""

    RETURN


CHECK.TRANSACTION:

    IF M.IB.ERMB.SUMM.SB.ID AND IN.MSG.TYPE[1,1] = "S" THEN RETURN
    TRANS.KEY.ID=""
    NO.IDS = DCOUNT(R.IB.PARAMETER.SB<IB.PARM.MSG.KEY>,VM)
    FOR KK = 1 TO NO.IDS
        TAG.ID = TRIM(R.IB.PARAMETER.SB<IB.PARM.MSG.KEY,KK>,  "0", "L")
        LOCATE TAG.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            TRANS.KEY.ID := TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
        END
    NEXT KK
    TRANS.KEY.ID = CHANGE(TRANS.KEY.ID," ","")

    CALL F.READ(FN.IB.ATM.MESSAGE.LOG.SB, TRANS.KEY.ID , R.IB.ATM.MESSAGE.LOG.SB, F.IB.ATM.MESSAGE.LOG.SB, YERR)
    YMSG = 'TRANS.KEY.ID=' : TRANS.KEY.ID
    GOSUB LOG.ERROR

    RETURN

GET.REV.TRANSACTION:

    IF YR.MESSAGE.EVENT="PIN.CHANGE" THEN
        REV.TRANS.KEY.ID = ""
        GOSUB SET.BYPASS.ENQ
        Y.CARD.STATUS = 0
        YR.ERROR.IN.APPLICATION = 0
        RETURN
    END

    REV.TRANS.KEY.ID = ""
    NO.IDS = DCOUNT(R.IB.PARAMETER.SB<IB.PARM.REV.MSG.KEY>,VM)
    FOR KK = 1 TO NO.IDS
        TAG.ID = TRIM(R.IB.PARAMETER.SB<IB.PARM.REV.MSG.KEY,KK>,  "0", "L")
        LOCATE TAG.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            REV.TRANS.KEY.ID := TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
        END
    NEXT KK

    REV.TRANS.KEY.ID = CHANGE(REV.TRANS.KEY.ID," ","")

    CALL F.READ(FN.IB.ATM.MESSAGE.LOG.SB, REV.TRANS.KEY.ID , R.IB.ATM.MESSAGE.LOG.SB, F.IB.ATM.MESSAGE.LOG.SB, YERR)
    YMSG = 'REV.TRANS.KEY.ID=' : REV.TRANS.KEY.ID
    GOSUB LOG.ERROR

    RETURN

PROCESS:

    APP.NAME = R.ATM.MAPPING.SB<ATM.MAP.APPLICATION>

    VER.NAME = R.ATM.MAPPING.SB<ATM.MAP.VERSION.NAME>
    TXN.TYPE = R.ATM.MAPPING.SB<ATM.MAP.FT.TXN.TYPE>

    IF YR.INTERFACE = "FILE" AND M.AC.LOCKED.EVENTS.ID THEN
        GOSUB REV.AC.LOCKED
        RETURN
    END

    IF (IN.MSG.TYPE[1,1] = "2" AND YR.INTERFACE <> "FILE")  OR ( CODRESP.VALUE  = "N" AND YR.INTERFACE = "FILE") THEN
        GOSUB GET.REV.TRANSACTION
        OFSFUNCT = "R"
        TRANSACTION.ID = R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.GLOBUS.FT.NO>
        YMSG = 'TRANSACTION.ID=':TRANSACTION.ID
        GOSUB LOG.ERROR
        GTSMODE = 1
        GOSUB PROCESS.REVERSAL
    END ELSE
        OFSFUNCT = "I"
        Y.SKIP = 0
        IF R.IB.ATM.MESSAGE.LOG.SB THEN
            IF R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.OUT.MSG> AND R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.STATUS> = "PROCESSED" THEN
                RETURN.DATA = R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.OUT.MSG>
                GOSUB SET.BYPASS.ENQ
                YMSG = "RETURNING RESPONSE FROM LOG FILE"
                GOSUB LOG.ERROR
                Y.SKIP = 1
            END
        END
        IF NOT(Y.SKIP) THEN
            IF IN.MSG.TYPE[1,1] = "3" THEN
                GTSMODE = 1
            END
            GOSUB PROCESS.INPUT
        END
    END

    IN.MSG = OFS.RECORD

    RETURN

PROCESS.REVERSAL:

    YMSG = 'START REVERSAL PROCESSS'
    GOSUB LOG.ERROR

    IF NOT(OFS.COMPANY) THEN
        OFS.COMPANY = R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.OFS.COMPANY>
        IF ID.COMPANY <> OFS.COMPANY THEN
            IF OFS.COMPANY THEN
                ID.COMPANY = OFS.COMPANY
                CALL LOAD.COMPANY(ID.COMPANY)
            END
        END
    END

    IF NOT(OFS.COMPANY) THEN
        GOSUB GET.OFS.COMPANY
    END

    ID.COMPANY =  OFS.COMPANY

    IF R.ATM.MAPPING.SB<ATM.MAP.CLEAN.UP.RTN> THEN
        RTN.ID = R.ATM.MAPPING.SB<ATM.MAP.CLEAN.UP.RTN>[2,999]
        GOSUB CALL.CLEAN.RTN
    END

    IF TRANSACTION.ID THEN
        OFSVERSION = "," : VER.NAME[",",2,1]
        YCOMP = ID.COMPANY
        YFUNC = OFSFUNCT : FM : GTSMODE
        R.RECORD = ""
        OFS.RECORD = ""
        GOSUB GET.USER.INFO
        CALL IB.OFS.BUILD.RECORD.SB(APP.NAME,YFUNC,"PROCESS",OFSVERSION,TRANSACTION.ID,R.RECORD,USER.INFO,OFS.RECORD)
        YMSG = OFS.RECORD
        GOSUB LOG.ERROR
    END ELSE
        YR.CARD.STATUS = 4
        YR.ERROR.IN.APPLICATION = FAIL.REV.TXN.NOT.FOUND
        GOSUB SET.BYPASS.ENQ
    END

    RETURN

REV.AC.LOCKED:

    TRANSACTION.ID = M.AC.LOCKED.EVENTS.ID<1>
    BRANCH.CODE = M.AC.LOCKED.EVENTS.ID<2>
    IN.MSG = ""
    OFSFUNCT = "R"
    GTSMODE = 1

    APP.NAME = "AC.LOCKED.EVENTS"
    VER.NAME = APP.NAME : ",VISA"

    LOCATE BRANCH.CODE IN R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE,1> SETTING TEMP.POS THEN
        IF R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS> <> ID.COMPANY THEN
            ID.COMPANY = R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS>
            IF OFS.COMPANY <> ID.COMPANY THEN
                CALL LOAD.COMPANY( ID.COMPANY )
            END
        END
*        GOSUB SET.AC.LOCKED.TODAY
        OFSFUNCT = "R"
        GOSUB PROCESS.REVERSAL
        IN.MSG = OFS.RECORD
    END

    RETURN

SET.AC.LOCKED.TODAY:

    R.RECORD = ""
    R.RECORD<AC.LCK.TO.DATE> = TODAY
    OFSFUNCT = "I"

    IF R.ATM.MAPPING.SB<ATM.MAP.CLEAN.UP.RTN> THEN
        RTN.ID = R.ATM.MAPPING.SB<ATM.MAP.CLEAN.UP.RTN>[2,999]
        GOSUB CALL.CLEAN.RTN
    END

    IF TRANSACTION.ID THEN
        OFSVERSION = "," : VER.NAME[",",2,1]
        YCOMP = ID.COMPANY
        YFUNC = OFSFUNCT : FM : GTSMODE
        OFS.RECORD = ""
        GOSUB GET.USER.INFO
        CALL IB.OFS.BUILD.RECORD.SB(APP.NAME,YFUNC,"PROCESS",OFSVERSION,TRANSACTION.ID,R.RECORD,USER.INFO,OFS.RECORD)
        YMSG = OFS.RECORD
        GOSUB LOG.ERROR
        IN.MSG<-1> = OFS.RECORD
    END

    RETURN

GET.USER.INFO:

    READ R.IB.OFS.USER.SB FROM F.IB.OFS.USER.SB, USER.NUMBER THEN
        OFS.USER.ID = R.IB.OFS.USER.SB<  IB.EVE.USER.ID >

        FN.OFS.USER.SB = "F.OFS.USER.SB"
        F.OFS.USER.SB = ""
        CALL OPF(FN.OFS.USER.SB, F.OFS.USER.SB)

        FV.USER = ""
        CALL OPF("F.USER", FV.USER)

        READ RV.USER FROM FV.USER,OFS.USER.ID THEN

            USER.SON = RV.USER< EB.USE.SIGN.ON.NAME >

            READ R.OFS.USER.SB FROM F.OFS.USER.SB, OFS.USER.ID ELSE NULL

            PWORD = R.OFS.USER.SB<SB.OFS.PASSWORD>
            IF R.OFS.USER.SB<SB.OFS.PASSWORD+1> THEN
                PWORD := FM : R.OFS.USER.SB<SB.OFS.PASSWORD+1>
            END

            IF PWORD THEN
                CALL OFS.USER.ENCR.DECR.SB ( PWORD, "DE")
            END
            USER.INFO<1> = USER.SON
            USER.INFO<2> = PWORD
        END
    END
    RETURN

GET.TRANS.AMT:

    YAMT = ""
    YAMT.SIGN = ""
    TAX.AMT = ""
    TAX.AMT.SIGN = ""
    COMM.AMT = ""
    COMM.AMT.SIGN = ""
    AQU.AMT = ""
    AQU.AMT.SIGN = ""
    MERCHANT.COMM.AMT = ""

    BEGIN CASE
    CASE APP.NAME = "AC.LOCKED.EVENTS"
        M.IB.MESSAGE.TAG.SB.ID = CARD.TAG.ID
        GOSUB GET.TAG.VALUE
        YAMT = TAG.VALUE

    CASE OTHERWISE
        YDR.NO = DCOUNT(MSG.DATA<MSG.TAG.ID>, VM)
        FOR YDR = 1 TO YDR.NO
            TAG.ID = MSG.DATA<MSG.TAG.ID,YDR>
            YVALUE = MSG.DATA<MSG.TAG.VALUE,YDR>

            IF TAG.ID = IB.DR.AMT.TAG THEN
                YVALUE *=1
                IF YVALUE THEN
                    YAMT = YVALUE
                END
            END

            IF YAMT THEN
                BEGIN CASE
                CASE TAG.ID = 318 AND NOT(YAMT.SIGN)
                    YAMT.SIGN = YVALUE
                CASE TAG.ID = 318 AND NOT(TAX.AMT.SIGN)
                    TAX.AMT.SIGN = YVALUE
                CASE TAG.ID = 318 AND NOT(COMM.AMT.SIGN)
                    COMM.AMT.SIGN = YVALUE
                CASE TAG.ID = 318 AND NOT(AQU.AMT.SIGN)
                    AQU.AMT.SIGN = YVALUE
                CASE TAG.ID = 265
                    TAX.AMT = YVALUE
                CASE TAG.ID = 50
                    COMM.AMT = YVALUE
                CASE TAG.ID = 51
                    AQU.AMT = YVALUE
                CASE TAG.ID = 52
                    MERCHANT.COMM.AMT = YVALUE
                END CASE
            END

            IF YAMT.SIGN AND TAX.AMT.SIGN AND COMM.AMT.SIGN AND AQU.AMT.SIGN THEN
                EXIT
            END

        NEXT YDR
    END CASE

    TAG.VALUE = YAMT

    RETURN

PROCESS.INPUT:

    IF YR.MESSAGE.EVENT = "POS.CLOSURE" OR IN.MSG.TYPE = "2EDST" OR IN.MSG.TYPE = "1EDST" OR IN.MSG.TYPE = "2CCLN" THEN
        GOSUB PROCESS.INPUT.FROM.TAGS
        GTSMODE = 0
        RETURN
    END

    AVAIL.BAL = R.IB.ATM.BALANCE.SB<IB.BAL.AVAIL.BAL>/100

    IF R.IB.ATM.BALANCE.SB<IB.BAL.SIGN> = "D" THEN
        AVAIL.BAL *= -1
    END

    TXN.AMT = 0

    M.IB.MESSAGE.TAG.SB.ID =  IB.DR.AMT.TAG
    YSMG = "DEBIT.AMT.TAG=" : M.IB.MESSAGE.TAG.SB.ID
    GOSUB LOG.ERROR

    GOSUB GET.TRANS.AMT

    TXN.AMT = TAG.VALUE / 100

    BUY.OR.SEL = TRIM(MSG.DATA<MSG.TAG.VALUE,POS+1>)

    YMSG = "AVAIL.BAL=" :  AVAIL.BAL  : "  TXN.AMT=" :  TXN.AMT : " EVALS (" : ((AVAIL.BAL - TXN.AMT) < 0 ) ")"
    GOSUB LOG.ERROR

    COND1 = (YR.INTERFACE <> "FILE")
    COND2 = (R.ATM.MAPPING.SB<ATM.MAP.CHECK.BALANCE> EQ "NO")

    YMSG = "YR.INTERFACE EQ FILE - " : COND1 : " CHECK.BALANCE - " : COND2
    GOSUB LOG.ERROR

    IF COND1 THEN
        IF NOT(COND2) THEN
            IF IN.MSG.TYPE[1,1] = "1" THEN
                IF (AVAIL.BAL - TXN.AMT) < 0 THEN
                    Y.CARD.STATUS = 5
                    GOSUB SET.BYPASS.ENQ
                    YR.ERROR.IN.APPLICATION = FAIL.NO.FUNDS
                    YMSG = "NOT FUNDS AVAIL.BAL=" : AVAIL.BAL  : " TXN.AMT=" : TXN.AMT
                    GOSUB LOG.ERROR
                    RETURN
                END
            END ELSE
                YMSG = "BYPASS FUNDS CHECKS AND FORCE DEBIT TO ACCOUNT"
                GOSUB LOG.ERROR
            END
        END
    END

    YMSG = "PROCESS IN MESSAGE.TYPE=" : IN.MSG.TYPE
    GOSUB LOG.ERROR
    CALL CACHE.READ(FN.IB.MSG.GRP.SB,IN.MSG.TYPE, R.IB.MSG.GRP.SB, ETEXT)
    GRP.NO = DCOUNT(R.IB.MSG.GRP.SB<IB.MSG.GRP.TAG.GRP.REF>,VM)

    TAG.POS = 0

    FOR GG = 1 TO GRP.NO
        M.IB.TAG.GRP.SB.ID = R.IB.MSG.GRP.SB<IB.MSG.GRP.TAG.GRP.REF,GG>
        YMSG = "PROCESS GROUP ID=" : M.IB.TAG.GRP.SB.ID
        GOSUB LOG.ERROR
        IF M.IB.TAG.GRP.SB.ID = "VARIABLE.DATA" THEN
            Y.VARIABLE.DATA = 1
            M.IB.TAG.GRP.SB.ID = YR.MESSAGE.CODE : "." : IN.MESSAGE.CODE
        END
        CALL CACHE.READ(FN.IB.TAG.GRP.SB, M.IB.TAG.GRP.SB.ID, R.IB.TAG.GRP.SB, YERR)
        NO.TAGS = DCOUNT(R.IB.TAG.GRP.SB<IB.TAG.GRP.TAG.REFERENCE>,VM)
        FOR TT = 1 TO NO.TAGS
            M.IB.MESSAGE.TAG.SB.ID = R.IB.TAG.GRP.SB<IB.TAG.GRP.TAG.REFERENCE,TT>
            IF YR.INTERFACE <> "FILE" THEN
                TAG.POS += 1
            END ELSE
                TAG.POS = ""
            END
            GOSUB GET.TAG.VALUE
            GOSUB PROCESS.TAG

        NEXT TT
    NEXT GG

    GOSUB CREATE.OFS

    RETURN

PROCESS.INPUT.FROM.TAGS:

    MERCHANT.COMM.AMT = 0

    NO.TAGS = DCOUNT(MSG.DATA<MSG.TAG.ID>,VM)
    FOR TT = 1 TO NO.TAGS
        TAG.POS = TT
        M.IB.MESSAGE.TAG.SB.ID = MSG.DATA<MSG.TAG.ID,TT>
        GOSUB GET.TAG.VALUE
        GOSUB PROCESS.TAG
    NEXT TT

    IF NOT( POS.PL ) THEN
        LOCATE "8" IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            TXN.AMT = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>) / 100
            YAMT.SIGN = TRIM(MSG.DATA<MSG.TAG.VALUE,POS+1>)
        END
    END ELSE
        LOCATE "52" IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            TXN.AMT = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>) / 100
            YAMT.SIGN = TRIM(MSG.DATA<MSG.TAG.VALUE,POS+1>)
        END
        LOCATE "53" IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            TXN.AMT += TRIM(MSG.DATA<MSG.TAG.VALUE,POS>) / 100
            YAMT.SIGN = TRIM(MSG.DATA<MSG.TAG.VALUE,POS+1>)
        END
    END

    GOSUB CREATE.OFS

    RETURN

GET.TAG.VALUE:

    TAG.VALUE = ""
    CALL CACHE.READ(FN.IB.MESSAGE.TAG.SB, M.IB.MESSAGE.TAG.SB.ID, R.IB.MESSAGE.TAG.SB, YERR)
    TAG.VALUE = ""
    M.IB.MESSAGE.TAG.SB.ID *= 1

    IF TAG.POS THEN
        TAG.VALUE = TRIM(MSG.DATA<MSG.TAG.VALUE,TAG.POS>)
        BEGIN CASE
        CASE  M.IB.MESSAGE.TAG.SB.ID = "8"
            IF TAG.VALUE THEN
                LOCATE M.IB.MESSAGE.TAG.SB.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
                    MSG.DATA<MSG.TAG.VALUE,POS> = TAG.VALUE
                    MSG.DATA<MSG.TAG.VALUE,POS+1> = MSG.DATA<MSG.TAG.VALUE,TAG.POS+1>
                END
            END
        CASE  M.IB.MESSAGE.TAG.SB.ID = "52"
            IF TAG.VALUE THEN
                LOCATE M.IB.MESSAGE.TAG.SB.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
                    MSG.DATA<MSG.TAG.VALUE,POS> = TAG.VALUE
                    MSG.DATA<MSG.TAG.VALUE,POS+1> = MSG.DATA<MSG.TAG.VALUE,TAG.POS+1>
                END
            END
        END CASE

        RETURN
    END

    LOCATE M.IB.MESSAGE.TAG.SB.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
        TAG.VALUE = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
    END ELSE
        M.IB.MESSAGE.TAG.SB.ID = M.IB.MESSAGE.TAG.SB.ID[".",1,1]
        LOCATE M.IB.MESSAGE.TAG.SB.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            TAG.VALUE = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
        END
    END

    RETURN

PROCESS.TAG:

    Y.CALC.VALUE=""

    YMSG = "M.IB.MESSAGE.TAG.SB.ID=" : M.IB.MESSAGE.TAG.SB.ID : " VALUE=" : TAG.VALUE
    GOSUB LOG.ERROR

    LOCATE "IN" IN R.IB.MESSAGE.TAG.SB<IB.MSG.TAG.DIRECTION,1> SETTING DIR.POS  THEN
        NO.APPS = DCOUNT( R.IB.MESSAGE.TAG.SB<IB.MSG.TAG.APPLICATION,DIR.POS> , SM)
        FOR AA = 1 TO NO.APPS
            IF APP.NAME EQ R.IB.MESSAGE.TAG.SB<IB.MSG.TAG.APPLICATION,DIR.POS,AA> THEN
                IF R.IB.MESSAGE.TAG.SB<IB.MSG.TAG.CONVERSION,DIR.POS,AA> THEN
                    YROUTINE = R.IB.MESSAGE.TAG.SB<IB.MSG.TAG.CONVERSION,DIR.POS,AA>[2,99]
                    YR.RETURN = TAG.VALUE
                    CALL @YROUTINE
                    TAG.VALUE = YR.RETURN
                    YMSG = "CALLING " : YROUTINE : " RETURN VALUE --> " :  YR.RETURN
                    GOSUB LOG.ERROR
                END
                DATA.POS = R.IB.MESSAGE.TAG.SB<IB.MSG.TAG.FLD.POS,DIR.POS,AA>
                YFM = DATA.POS[",",1,1]
                YVM = DATA.POS[",",2,1]
                YSM = DATA.POS[",",3,1]
                BEGIN CASE
                CASE YFM AND YVM AND YSM
                    R.RECORD<YFM, YVM, YSM> = TAG.VALUE
                CASE YFM AND YVM
                    R.RECORD<YFM, YVM> = TAG.VALUE
                CASE YFM
                    R.RECORD<YFM> = TAG.VALUE
                END CASE
                YMSG = "YFM=" : YFM : " YVM=" : YVM : " YSM=" : YSM
                GOSUB LOG.ERROR
            END
        NEXT AA
    END

    RETURN

GET.ACCOUNT.CCY:

    BEGIN CASE

    CASE TEMP.ID[1,3] MATCHES '3A'
        TEMP.CCY = TEMP.ID[1,3]

    CASE TEMP.ID[1,2] = "PL"
        TEMP.CCY = LCCY
    CASE OTHERWISE

        TEMP.ACC=""
        YERR = ""
        IF FN.ACCOUNT THEN
            READ TEMP.ACC FROM F.ACCOUNT, TEMP.ID ELSE NULL
        END
        IF NOT(TEMP.ACC) THEN
            TEMP.BR.CODE = TEMP.ID[1,3]
            LOCATE TEMP.BR.CODE IN R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE,1> SETTING TEMP.POS THEN
                IF R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS> <> ID.COMPANY THEN
                    FN.TEMP.ACCT = "F" : R.INTERCO.PARAMETER<ST.ICP.FIN.MNEMONIC,TEMP.POS> : ".ACCOUNT" : FM : "NO.FATAL.ERROR"
                    F.TEMP.ACCT = ""
                    CALL OPF(FN.TEMP.ACCT, F.TEMP.ACCT)
                    IF FN.TEMP.ACCT THEN
                        READ TEMP.ACC FROM F.TEMP.ACCT, TEMP.ID ELSE NULL
                    END
                END
            END
        END
        IF NOT(TEMP.ACC) THEN
            YERR = "RECORD NOT FOUND"
            YMSG = "READING " : TEMP.ID : " FROM : " : FN.ACCOUNT : " RESULT " : TEMP.ACC<1> : " ERR=" : YERR
            GOSUB LOG.ERROR
        END ELSE
            TEMP.CCY = TEMP.ACC<AC.CURRENCY>
            IF DR.SIDE.ACCT THEN
                R.ACCOUNT = TEMP.ACC
            END
        END
    END CASE
    RETURN

CREATE.OFS:
    SKIP.OFS = 0
    R.ACCOUNT = ""
    DR.SIDE.ACCT = 0
    IF APP.NAME EQ "FUNDS.TRANSFER" OR APP.NAME EQ "AC.LOCKED.EVENTS" THEN
        IF NOT(TXN.AMT) THEN
            Y.CARD.STATUS = 5
            GOSUB SET.BYPASS.ENQ
            YR.ERROR.IN.APPLICATION = FAIL.DUE.TO.TECH.ERROR
            YMSG = "TXN.AMT HAS VALUE OF -" : TXN.AMT : "- RETURNING WITH ERROR "  :  Y.CARD.STATUS
            GOSUB LOG.ERROR
            RETURN
        END
    END

    BEGIN CASE

    CASE APP.NAME = "FUNDS.TRANSFER"

        TXN.ACCT = R.RECORD<FT.DEBIT.ACCT.NO>

        IF NOT( R.RECORD<FT.DEBIT.AMOUNT> ) AND NOT(  R.RECORD<FT.CREDIT.AMOUNT> ) THEN
            IF YAMT.SIGN = "C" THEN
                R.RECORD<FT.DEBIT.AMOUNT> = TXN.AMT
            END ELSE
                R.RECORD<FT.CREDIT.AMOUNT> = TXN.AMT
            END
        END

        YACC.NO = ""  ; USER.INFO = "" ; YDACC.NO = ""
        CALL IB.GET.CR.ACCT.SB( YACC.NO, USER.INFO)

        R.RECORD<FT.CREDIT.ACCT.NO> = YACC.NO

        IF IN.MSG.TYPE = "3100" THEN
            IF YAMT.SIGN = "C" THEN
                R.RECORD<FT.CREDIT.ACCT.NO> = TXN.ACCT
                R.RECORD<FT.DEBIT.ACCT.NO> = YACC.NO
            END
        END

        IF YR.INTERFACE = "FILE" AND  IN.MSG.TYPE = "2EDST" THEN
            IF YAMT.SIGN = "D" THEN
                R.RECORD<FT.CREDIT.ACCT.NO> = R.RECORD<FT.DEBIT.ACCT.NO>
                R.RECORD<FT.DEBIT.ACCT.NO> = YACC.NO
            END
        END


* Debito a PL
*    IF YR.INTERFACE = "FILE" AND  IN.MSG.TYPE = "3EDST" THEN
*      IF YAMT.SIGN = "C" THEN
*        R.RECORD<FT.CREDIT.ACCT.NO> = R.RECORD<FT.DEBIT.ACCT.NO>
*      R.RECORD<FT.DEBIT.ACCT.NO> = YACC.NO
*    R.RECORD<FT.ORDERING.BANK> = "PONTO 24"
*  R.RECORD<FT.CHARGE.CODE> = "WAIVE"
* END
* END

        IF YR.INTERFACE = "FILE" AND  IN.MSG.TYPE = "1100" THEN
            IF YAMT.SIGN = "C" THEN
                R.RECORD<FT.CREDIT.ACCT.NO> = R.RECORD<FT.DEBIT.ACCT.NO>
                R.RECORD<FT.DEBIT.ACCT.NO> = YACC.NO
            END
        END

        DR.SIDE.ACCT = 1
        TEMP.ID = R.RECORD<FT.DEBIT.ACCT.NO>
        GOSUB GET.ACCOUNT.CCY
        R.RECORD<FT.DEBIT.CURRENCY>=TEMP.CCY
        YMSG = "DEBIT CCY = " : R.RECORD<FT.DEBIT.CURRENCY>  : " FOR ID=" : TEMP.ID
        GOSUB LOG.ERROR
        DR.SIDE.ACCT = 0

        TEMP.ID = R.RECORD<FT.CREDIT.ACCT.NO>
        GOSUB GET.ACCOUNT.CCY
        R.RECORD<FT.CREDIT.CURRENCY>=TEMP.CCY
        YMSG = "CREDIT CCY =" : R.RECORD<FT.CREDIT.CURRENCY>

        R.RECORD<FT.TRANSACTION.TYPE>=TXN.TYPE
        IF R.RECORD<FT.DEBIT.ACCT.NO>[1,3] MATCHES '3A' THEN
            R.RECORD<FT.ORDERING.BANK> = "PONTO 24"
            R.RECORD<FT.CHARGE.CODE> = "WAIVE"
        END ELSE
            GOSUB SET.COMM.TYPE
        END

        CALL IB.ATM.CHECK.FX.LEG.SB

        GOSUB LOG.ERROR

    CASE APP.NAME = "AC.LOCKED.EVENTS"
        R.RECORD<AC.LCK.DESCRIPTION> = "LOCKED AMOUNT FROM INTERBANCO"
        R.RECORD<AC.LCK.FROM.DATE> = TODAY
        YR.DATE1 = TODAY
        YR.DATE2 = '120'
        YR.DATE3 = "+":YR.DATE2:"C"
        CALL CDT("",YR.DATE1,YR.DATE3)
        R.RECORD<AC.LCK.TO.DATE> = YR.DATE1

        FT.COMM.TYPE=""
        FT.CHG.CODE=""
        CHG.AMT = 0
* Nao incluir charge amount nos cativos para conta staff - 20150721
        DR.ACCT.ID = R.RECORD<AC.LCK.ACCOUNT.NUMBER>
        CALL GET.ACCT.BRANCH(DR.ACCT.ID,MNEM,YCOMP)
        FN.ACCOUNT = "F":MNEM:".ACCOUNT"
        F.ACCOUNT = ""
        CALL OPF(FN.ACCOUNT, F.ACCOUNT)
        READ R.ACCT FROM F.ACCOUNT, DR.ACCT.ID THEN
            YR.CATEGORY = R.ACCT<AC.CATEGORY>
        END
        LOCATE YR.CATEGORY IN R.IB.PARAMETER.SB<IB.PARM.STAFF.CAT.CODES,1> SETTING POS ELSE
            CALL IB.GET.COMM.CHG.SB( FT.COMM.TYPE, FT.CHG.CODE)
        END
* fim
        IF FT.COMM.TYPE THEN
            CMM.CHARGES = FT.COMM.TYPE
            GOSUB CALCULATE.CHARGE
            CHG.AMT = YT.LAMT
        END
        IF FT.CHG.CODE THEN
            CMM.CHARGES = FT.CHG.CODE
            GOSUB CALCULATE.CHARGE
            CHG.AMT + = YT.LAMT
        END

        YMSG = "CHARGE AMOUNT IS " : CHG.AMT : " TOTAL " : (TXN.AMT + CHG.AMT)
        GOSUB LOG.ERROR

* Busca da moeda da conta
        TEMP.ID = R.RECORD<AC.LCK.ACCOUNT.NUMBER>
        GOSUB GET.ACCOUNT.CCY
        YCCY1 = "MZN"
        YAMT1 = TXN.AMT + CHG.AMT
        YCCY2 = TEMP.CCY
        YAMT2 = ""
        YRATE = ""
        R.RECORD<AC.LCK.LOCAL.REF,4> = YAMT1
        IF YCCY1 <> YCCY2 THEN
            Y.PROC.FLAG = ''
            CALL LIMIT.CURR.CONV(YCCY1,YAMT1,YCCY2,YAMT2,Y.PROC.FLAG)
            YRATE = (YAMT1/YAMT2)[1,7]
            R.RECORD<AC.LCK.LOCAL.REF,3> = YRATE
            R.RECORD<AC.LCK.LOCKED.AMOUNT> = YAMT2
        END ELSE
            R.RECORD<AC.LCK.LOCKED.AMOUNT> = YAMT1
            R.RECORD<AC.LCK.LOCAL.REF,3> = "1.00"
        END

* RETIRADO

    CASE APP.NAME = "BSTM.CHEQUE.REQUEST"
        TEMP.ID = R.RECORD<BSTM.CHQR.ACCT.NUMBER>
        GOSUB GET.ACCOUNT.CCY
        R.RECORD<BSTM.CHQR.CHARGE.CURRENCY> = TEMP.CCY
        R.RECORD<BSTM.CHQR.CHQ.TYPE> = "BN"
        R.RECORD<BSTM.CHQR.BOOKING.DATE> = TODAY
        R.RECORD<BSTM.CHQR.WAIVE.CHARGES> = "NO"
        R.RECORD<BSTM.CHQR.LOCAL.REF,1> = TEMP.CCY
        YMSG = "R.RECORD=":R.RECORD
        GOSUB LOG.ERROR

    CASE APP.NAME = "IB.REQUEST.NIB.TRANSFER.SB"
        TRANSACTION.ID  =""
        YTAG.LIST =  RAISE(IB.NIB.ACCT.TAG)
        LOOP
            REMOVE TAG.ID FROM YTAG.LIST SETTING P.GO
        WHILE TAG.ID DO
            LOCATE TAG.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
                TRANSACTION.ID := TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
            END
        REPEAT
        YMSG ="TRANSACTION.ID =" : TRANSACTION.ID
        GOSUB LOG.ERROR

    CASE APP.NAME = "IB.PIN.CHANGE.SB"
        TRANSACTION.ID = "IB"
        NO.IDS = DCOUNT(R.IB.PARAMETER.SB<IB.PARM.MSG.KEY>,VM)
        FOR KK = 1 TO NO.IDS
            TAG.ID = TRIM(R.IB.PARAMETER.SB<IB.PARM.MSG.KEY,KK>,  "0", "L")
            LOCATE TAG.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
                TRANSACTION.ID := TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
            END
        NEXT KK
        TRANSACTION.ID = CHANGE(TRANSACTION.ID," ","")

    CASE APP.NAME = "CARD.ISSUE"
        GOSUB GET.CARD.NUMBER

        IF R.CARD.ISSUE THEN
            R.RECORD<CARD.IS.ACCOUNT> = R.CARD.ISSUE<CARD.IS.ACCOUNT>
        END

    CASE OTHERWISE
        NULL
    END CASE

    IF R.ATM.MAPPING.SB<ATM.MAP.CLEAN.UP.RTN> THEN
        RTN.ID = R.ATM.MAPPING.SB<ATM.MAP.CLEAN.UP.RTN>[2,999]
        GOSUB CALL.CLEAN.RTN
    END

    IF NOT(SKIP.OFS) THEN
        OFSVERSION = "," : VER.NAME[",",2,1]
        GOSUB GET.OFS.COMPANY
        YCOMP = OFS.COMPANY
        YFUNC = OFSFUNCT : FM : GTSMODE
        OFS.RECORD = ""
        YMSG = "ID.COMPANY=" : YCOMP : " GTSMODE=" : GTSMODE
        GOSUB LOG.ERROR
        GOSUB GET.USER.INFO
        ID.COMPANY.SAVE = ID.COMPANY
        ID.COMPANY = YCOMP
        CALL IB.OFS.BUILD.RECORD.SB(APP.NAME,YFUNC,"PROCESS",OFSVERSION,TRANSACTION.ID,R.RECORD,USER.INFO,OFS.RECORD)
        YMSG = '"' : OFS.RECORD  :'"'
        ID.COMPANY = ID.COMPANY.SAVE
        GOSUB LOG.ERROR
    END

    RETURN

GET.OFS.COMPANY:

    IF NOT(R.IB.ATM.POS.LINK.SB) THEN
        YACC.NO = ""
        CALL IB.GET.CR.ACCT.SB( YACC.NO, USER.INFO )
    END

    OFS.COMPANY = ""
    ACC.LOAD.COMP = ""
    YR.BANK.ID = ""
    OWN.BANK.ID = R.IB.PARAMETER.SB< IB.PARM.OWN.BANK.CODE >
    LOCATE IB.BANK.ID.CODE.TAG IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
        YR.BANK.ID = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>)
    END

    DR.ACCT.ID = R.RECORD<FT.DEBIT.ACCT.NO>
    CR.ACCT.ID = R.RECORD<FT.CREDIT.ACCT.NO>

    BEGIN CASE

    CASE (YR.BANK.ID = OWN.BANK.ID ) AND YR.MESSAGE.EVENT="INT.BANK.TRF.PAY"
        OFS.COMPANY = ID.COMPANY

    CASE APP.NAME = "CARD.ISSUE"
        OFS.COMPANY = ID.COMPANY

    CASE IN.MSG.TYPE = "3190"

        YDACC.NO = R.RECORD<FT.DEBIT.ACCT.NO>
        R.RECORD<FT.DEBIT.ACCT.NO> = R.RECORD<FT.CREDIT.ACCT.NO>
        R.RECORD<FT.CREDIT.ACCT.NO> = YDACC.NO

        ACC.LOAD.COMP = R.RECORD<FT.CREDIT.ACCT.NO>
        COMM.AMT1 = "" ; COMM.AMT2 = ""

        YR.END.TAG = DCOUNT(MSG.DATA<MSG.TAG.ID>, VM)

        LOCATE "52" IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            LOOP
            WHILE NOT(COMM.AMT1) OR  NOT(COMM.AMT2) DO
                IF NOT(COMM.AMT1) THEN
                    IF MSG.DATA<MSG.TAG.ID,POS> = 52 THEN
                        COMM.AMT1 = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>) / 100
                    END
                END
                IF NOT(COMM.AMT2) THEN
                    IF MSG.DATA<MSG.TAG.ID,POS> = 53 THEN
                        COMM.AMT2 = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>) / 100
                    END
                END
                POS += 1
                IF POS > YR.END.TAG THEN
                    EXIT
                END
            REPEAT
        END
        COMM.AMT = COMM.AMT1 + COMM.AMT2
        R.RECORD<FT.CHARGES.ACCT.NO> = R.RECORD<FT.CREDIT.ACCT.NO>
        R.RECORD<FT.COMMISSION.CODE> = "D"
        R.RECORD<FT.COMMISSION.TYPE> = "ATMERCHANT"
        R.RECORD<FT.COMMISSION.AMT> =  R.RECORD<FT.DEBIT.CURRENCY>:COMM.AMT


        R.RECORD<FT.ORDERING.CUST> = YR.CUSTOMER.ID
        R.RECORD<FT.PROFIT.CENTRE.CUST> = YR.CUSTOMER.ID

    CASE IN.MSG.TYPE = "2195"
        OFS.COMPANY = ID.COMPANY
        ACC.LOAD.COMP = 0

    CASE (IN.MSG.TYPE = "3EDST") AND (YR.MESSAGE.EVENT = "POS.CLOSURE")
        OFS.COMPANY=ID.COMPANY
        ACC.LOAD.COMP = 0

    CASE (YR.BANK.ID = OWN.BANK.ID ) AND (YR.MESSAGE.EVENT = "CASH.WITHDRAWAL")
        LOCATE IB.TERMINAL.ID.TAG IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
            ATM.TERMINAL = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>, "0", "L")
            ATM.BRANCH = ATM.TERMINAL[1,3]
            LOCATE ATM.BRANCH IN R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE,1> SETTING TEMP.POS THEN
                IF R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS> <> ID.COMPANY THEN
                    OFS.COMPANY = R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS>
                    ACC.LOAD.COMP = ""
                END
            END
        END

    CASE (YR.BANK.ID = OWN.BANK.ID ) AND (YR.MESSAGE.EVENT = "BUY.POS")
        IF R.IB.ATM.POS.LINK.SB<IB.LINK.MERCHANT.COMPANY> NE "" THEN
            OFS.COMPANY = R.IB.ATM.POS.LINK.SB<IB.LINK.MERCHANT.COMPANY>
        END

    CASE (CR.ACCT.ID[1,3] MATCHES '3N' AND DR.ACCT.ID[1,3] MATCHES '3A' ) OR (DR.ACCT.ID[1,3] MATCHES '3N' AND CR.ACCT.ID[1,3] MATCHES '3A' )
        IF (ID.COMPANY[3] EQ DR.ACCT.ID[1,3]) OR (ID.COMPANY[3] EQ CR.ACCT.ID[1,3]) THEN
            NULL
        END ELSE
            IF DR.ACCT.ID[1,3] MATCHES '3N' THEN
                ATM.BRANCH = DR.ACCT.ID[1,3]
            END ELSE
                ATM.BRANCH = CR.ACCT.ID[1,3]
            END
            LOCATE ATM.BRANCH IN R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE,1> SETTING TEMP.POS THEN
                IF R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS> <> ID.COMPANY THEN
                    OFS.COMPANY = R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS>
                    ACC.LOAD.COMP = ""
                END
            END
        END

    CASE OTHERWISE
        ACC.LOAD.COMP = R.RECORD<FT.CREDIT.ACCT.NO>
    END CASE

    IF ACC.LOAD.COMP THEN
        CALL IB.LOAD.ATM.COMP.SB(ACC.LOAD.COMP)
        IF ACC.LOAD.COMP THEN
            OFS.COMPANY = ACC.LOAD.COMP
        END
    END

    IF NOT(OFS.COMPANY) THEN
        IF YR.BANK.ID = OWN.BANK.ID THEN
            LOCATE IB.TERMINAL.ID.TAG IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
                ATM.TERMINAL = TRIM(MSG.DATA<MSG.TAG.VALUE,POS>, "0", "L")
                ATM.BRANCH = ATM.TERMINAL[1,3]
                LOCATE ATM.BRANCH IN R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE,1> SETTING TEMP.POS THEN
                    IF R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS> <> ID.COMPANY THEN
                        OFS.COMPANY = R.INTERCO.PARAMETER<ST.ICP.COMPANY,TEMP.POS>
                    END
                END
            END
        END
    END

    IF NOT(OFS.COMPANY) THEN
        OFS.COMPANY = ID.COMPANY
    END

    YMSG = "OFS.COMPANY - " : OFS.COMPANY : " ID.COMPANY - " : ID.COMPANY
    GOSUB LOG.ERROR

    IF ID.COMPANY <> OFS.COMPANY THEN
        IF OFS.COMPANY THEN
            ID.COMPANY = OFS.COMPANY
            CALL LOAD.COMPANY(ID.COMPANY)
        END
    END

    RETURN

GET.CARD.NUMBER:

    M.CARD.ISSUE.ID = ""
    YR.CARD.ID = ""
    TAG.LIST = RAISE(R.IB.PARAMETER.SB<IB.PARM.CARD.NUMBER>)
    LOOP
        REMOVE TAG.ID FROM TAG.LIST SETTING YPOS
    WHILE TAG.ID DO
        LOCATE TAG.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING TAG.POS THEN
            YR.CARD.ID := MSG.DATA<MSG.TAG.VALUE,TAG.POS>
        END
    REPEAT

    YR.CARD.ID = TRIM(TRIM(YR.CARD.ID, "0", "L"))

    CALL IB.CALC.CHECK.DIGIT.SB(YR.CARD.ID )

    YMSG = "YR.CARD.ID=" :  YR.CARD.ID
    GOSUB LOG.ERROR
    YCARD.NO = YR.CARD.ID
    YACCT.ID = R.RECORD<CARD.IS.ACCOUNT>
    CALL IB.VALIDATE.CARD.SB( YCARD.NO, YACCT.ID, YRETURN)
    TRANSACTION.ID = M.CARD.ISSUE.ID

    RETURN

CALL.CLEAN.RTN:

    IF RTN.ID THEN
        COMPILED.OR.NOT = ''  ; R.ERR = ""
        CALL CHECK.ROUTINE.EXIST(RTN.ID, COMPILED.OR.NOT, R.ERR)

        IF COMPILED.OR.NOT THEN
            CALL @RTN.ID(R.RECORD)
        END
    END

    RETURN

SET.BYPASS.ENQ:

    GOSUB GET.USER.INFO

    OFS.REQ = "ENQUIRY.SELECT,," : USER.INFO<1> : "/" : USER.INFO<2> : "/MZ0010101,ATM.BYPASS.SB"
    YMSG = OFS.REQ
    GOSUB LOG.ERROR
    OFS.RECORD = OFS.REQ

    RETURN

SET.COMM.TYPE:

    CHG.AMT = 0

    R.RECORD<FT.COMMISSION.CODE> = "WAIVE"
    R.RECORD<FT.CHARGE.CODE> = "WAIVE"

    IF IN.MSG.TYPE = "1100" AND YAMT.SIGN = "C" THEN RETURN

    FT.COMM.TYPE = "" ; FT.CHG.CODE= ""

    DR.ACCT.ID = R.RECORD<FT.DEBIT.ACCT.NO>
    YR.CATEGORY = R.ACCOUNT<AC.CATEGORY>
    LOCATE YR.CATEGORY IN R.IB.PARAMETER.SB<IB.PARM.STAFF.CAT.CODES,1> SETTING POS ELSE
        IF NOT(M.CARD.ISSUE.ID) THEN
            GOSUB GET.CARD.NUMBER
            TRANSACTION.ID = ""
        END

* Comentado para cobrar comissao no Clearing - 20150618
*  IF M.CARD.ISSUE.ID THEN
*     CALL CACHE.READ(FN.CARD.ISSUE,M.CARD.ISSUE.ID,R.CARD.ISSUE, "")
*    LOCATE DR.ACCT.ID IN R.CARD.ISSUE<CARD.IS.ACCOUNT,1> SETTING POS THEN

        CALL IB.GET.COMM.CHG.SB( FT.COMM.TYPE, FT.CHG.CODE)

        IF FT.COMM.TYPE THEN
            CMM.CHARGES = FT.COMM.TYPE
            GOSUB CALCULATE.CHARGE
            CHG.AMT = YT.LAMT
            R.RECORD<FT.CHARGES.ACCT.NO> = DR.ACCT.ID
            R.RECORD<FT.COMMISSION.CODE> = "D"
            R.RECORD<FT.COMMISSION.TYPE> = FT.COMM.TYPE
        END
        IF FT.CHG.CODE THEN
            CMM.CHARGES = FT.CHG.CODE
            GOSUB CALCULATE.CHARGE
            CHG.AMT + = YT.LAMT
            R.RECORD<FT.CHARGES.ACCT.NO> = DR.ACCT.ID
            R.RECORD<FT.CHARGE.CODE> = "D"
            R.RECORD<FT.CHARGE.TYPE> = FT.CHG.CODE
        END
*   END
* END
* fim do comentario clearing
    END

    COND1 = (YR.INTERFACE <> "FILE")
    COND2 = (R.ATM.MAPPING.SB<ATM.MAP.CHECK.BALANCE> EQ "NO")

    IF COND1 THEN
        IF NOT(COND2) THEN
            IF CHG.AMT THEN
                YMSG = "CHARGE AMOUNT CALC : " : CHG.AMT
                GOSUB LOG.ERROR
                TEST.AMT = TXN.AMT + CHG.AMT
                IF IN.MSG.TYPE[1,1] = "1" THEN
                    YMSG = "CHECK TXN.AMT + CHARGES " : AVAIL.BAL : " < " : TEST.AMT : " EVALS (" : ((AVAIL.BAL - TEST.AMT) < 0 ) ")"
                    GOSUB LOG.ERROR
                    IF (AVAIL.BAL - TEST.AMT) < 0 THEN
                        Y.CARD.STATUS = 5
                        GOSUB SET.BYPASS.ENQ
                        YR.ERROR.IN.APPLICATION = FAIL.NO.FUNDS
                        YMSG = "NOT FUNDS AVAIL.BAL=" : AVAIL.BAL  : " TXN.AMT=" : TXN.AMT
                        GOSUB LOG.ERROR
                        SKIP.OFS = 1
                    END
                END
            END
        END
    END

    RETURN

CALCULATE.CHARGE:

    Y1 = YR.CUSTOMER.ID ; Y2 = TXN.AMT ; Y3 = LCCY
    Y4 = '1' ; Y5 = ''
    Y6 = '' ; Y7 = '' ; Y8 = CMM.CHARGES ; Y9 = ''
    Y10 = '' ; Y11 = ''

    CALL CALCULATE.CHARGE(Y1,Y2,Y3,Y4,Y5,Y6,Y7,Y8,Y9,Y10,Y11)

    YT.DATA = Y8
    YT.LAMT = Y10
    YT.FAMT = Y11

    RETURN

LOG.ERROR:

    IF ETEXT THEN
        IB.LOG.LEVEL = "ERROR"
    END ELSE
        ETEXT = YMSG
    END
    IF ETEXT THEN
        IN.PROCESS.ERROR = 1
        CALL IB.ATM.LOG.ERROR( SYSTEM(40) )
        IB.LOG.LEVEL = "DEBUG"
        ETEXT = ""
        YMSG = ""
    END
    RETURN

END
