    SUBROUTINE SB.LIMITE.EXTERIOR.CARTAO(ACCOUNT,VALOR,TIPOMOV,CARD.NO,ORIG.ALE,IN.MSG.TYPE,IN.MSG,RESULT)

*
*   Programa para validar o limite de cartoes no exterior
*   By Dercio Anselmo
*   20151228
*


    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INCLUDE BSTM.BP I_F.TRANS.EXTERIOR.LIMITE
    $INCLUDE BP I_F.SB.REGISTO.NOTIFICACAO
    $INCLUDE BP I_F.NOTIFICATION.SERVICE
    $INCLUDE ../T24_BP I_F.ACCOUNT
    $INCLUDE I_F.AC.LOCKED.EVENTS
    $INCLUDE BP I_F.TXN.EXTERIOR


    FN.ACCOUNT = "F.ACCOUNT"
    F.ACCOUNT = ""
    CALL OPF(FN.ACCOUNT, F.ACCOUNT)

    GOSUB INITIALISE
    GOSUB PROCESS.VALIDATION
    RETURN

INITIALISE:
*   Se se trata de reverse
    IF TIPOMOV EQ 'REVERSE' THEN

        ALE.ID = ORIG.ALE[1,14]
        ALE.COMPANY = ORIG.ALE[16,3]
        IF ALE.COMPANY[1,1] EQ 1 THEN ALE.COMPANY = 'S':ALE.COMPANY[2,2]
        IF ALE.COMPANY[1,1] EQ 2 THEN ALE.COMPANY = 'C':ALE.COMPANY[2,2]
        IF ALE.COMPANY[1,1] EQ 3 THEN ALE.COMPANY = 'N':ALE.COMPANY[2,2]

        FN.AC.LOCKED.EVENTS = 'F':ALE.COMPANY:'.AC.LOCKED.EVENTS'
        F.AC.LOCKED.EVENTS =  ''
        CALL OPF(FN.AC.LOCKED.EVENTS,F.AC.LOCKED.EVENTS)
        CALL F.READ(FN.AC.LOCKED.EVENTS,ALE.ID,ALE.REC,F.AC.LOCKED.EVENTS,YERR)

        IF YERR THEN
*          Ler no historico
            FN.AC.LOCKED.EVENTS$HIS = 'F':ALE.COMPANY:'.AC.LOCKED.EVENTS$HIS'
            F.AC.LOCKED.EVENTS$HIS =  ''
            CALL OPF(FN.AC.LOCKED.EVENTS$HIS,F.AC.LOCKED.EVENTS$HIS)
            CALL EB.READ.HISTORY.REC(F.AC.LOCKED.EVENTS$HIS,ALE.ID,ALE.REC,YERR)
        END
        VALOR = ALE.REC<AC.LCK.LOCKED.AMOUNT>
        ACCOUNT = ALE.REC<AC.LCK.ACCOUNT.NUMBER>
    END

*    CALL DBR('ACCOUNT':FM:AC.CUSTOMER,ACCOUNT,CUSTOMER)
    CALL CACHE.READ(FN.ACCOUNT,ACCOUNT,R.ACCOUNT,ETEXT)
    CUSTOMER = R.ACCOUNT<AC.CUSTOMER>

    RETURN

PROCESS.VALIDATION:
    GOSUB OPEN.FILE
    CALL F.READ(FN.TRANS.EXTERIOR.LIMITE,CUSTOMER,TRANS.REC,F.TRANS.EXTERIOR.LIMITE,YERR)
    LIMITE.EXTERIOR = TRANS.REC<EB.TRA66.LIMITE.EXTERIOR>
    VAL.ACTUAL.EXT =  TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT>
    VAL.ACTUAL.EXT.CD =  TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT.CD>
    IF VAL.ACTUAL.EXT EQ '' THEN VAL.ACTUAL.EXT = 0
    TRANS.COUNT = DCOUNT(ACCOUNT,VM) + 1
*   Se se trata do primeiro registo na tabela de limites para o cliente
    IF LIMITE.EXTERIOR EQ '' THEN
        LIMITE.EXTERIOR = 700000.00
        TRANS.COUNT = 1
    END
    ID.NR.LOG = IN.MSG[8,4]:IN.MSG[12,8]

    TXN.EXTERIOR.ID = CARD.NO[9,7]:'-':ID.NR.LOG
    IF TIPOMOV EQ 'REVERSE' THEN
        VAL.ACTUAL.EXT = VAL.ACTUAL.EXT - VALOR
        VAL.ACTUAL.EXT.CD = VAL.ACTUAL.EXT.CD - VALOR
        TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT> =  VAL.ACTUAL.EXT
        TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT.CD> =  VAL.ACTUAL.EXT.CD
        WRITE TRANS.REC ON F.TRANS.EXTERIOR.LIMITE,CUSTOMER ON ERROR NULL
        DELETE F.TXN.EXTERIOR,TXN.EXTERIOR.ID ON ERROR NULL
        RESULT = 1
    END ELSE
        VAL.ACTUAL.EXT = VAL.ACTUAL.EXT + VALOR
        VAL.ACTUAL.EXT.CD = VAL.ACTUAL.EXT.CD + VALOR
        YTENT.OUT.LIMIT.ORIGINAL = TRANS.REC<EB.TRA66.TENT.OUT.LIMIT>

        IF IN.MSG.TYPE = "3160" THEN
*       Se a mensagem eh 3160 - Pendente - autorizar o debito sempre
            TRANS.REC<EB.TRA66.ACCOUNT> =  ACCOUNT
            TRANS.REC<EB.TRA66.CARD.NUMBER> = CARD.NO
            TRANS.REC<EB.TRA66.VAL.TRANS> = VALOR
            TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT> =  VAL.ACTUAL.EXT
            TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT.CD> =  VAL.ACTUAL.EXT.CD
            TRANS.REC<EB.TRA66.LIMITE.EXTERIOR> =  LIMITE.EXTERIOR
            RESULT = 1

            IF VAL.ACTUAL.EXT LE LIMITE.EXTERIOR THEN
            END ELSE
                YTENT.OUT.LIMIT =  TRANS.REC<EB.TRA66.TENT.OUT.LIMIT>
                YTENT.OUT.LIMIT = YTENT.OUT.LIMIT + 1
                TRANS.REC<EB.TRA66.TENT.OUT.LIMIT> = YTENT.OUT.LIMIT
            END

        END ELSE
            IF VAL.ACTUAL.EXT LE LIMITE.EXTERIOR THEN
                TRANS.REC<EB.TRA66.ACCOUNT> = ACCOUNT
                TRANS.REC<EB.TRA66.CARD.NUMBER> = CARD.NO
                TRANS.REC<EB.TRA66.VAL.TRANS> = VALOR
                TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT> = VAL.ACTUAL.EXT
                TRANS.REC<EB.TRA66.VAL.ACTUAL.EXT.CD> =  VAL.ACTUAL.EXT.CD
                TRANS.REC<EB.TRA66.LIMITE.EXTERIOR> =  LIMITE.EXTERIOR
                RESULT = 1
            END ELSE
                YTENT.OUT.LIMIT =  TRANS.REC<EB.TRA66.TENT.OUT.LIMIT>
                YTENT.OUT.LIMIT = YTENT.OUT.LIMIT + 1
                TRANS.REC<EB.TRA66.TENT.OUT.LIMIT> = YTENT.OUT.LIMIT
            END
        END
        IF VAL.ACTUAL.EXT GE 500000 THEN
            GOSUB HANDLE.NOTIF
        END
        WRITE TRANS.REC ON F.TRANS.EXTERIOR.LIMITE,CUSTOMER ON ERROR NULL

*       15/08/16 - Dercio.Anselmo - Escrever na tabela TXN.EXTERIOR - Detalhes
        REC.TXN.EXTERIOR<EB.TXN89.CARD.NO> = CARD.NO[9,7]
        REC.TXN.EXTERIOR<EB.TXN89.TIPO.CARTAO> = 'Debito'
        REC.TXN.EXTERIOR<EB.TXN89.ACCONT> = ACCOUNT
        REC.TXN.EXTERIOR<EB.TXN89.TIPOTERM> = ''
        REC.TXN.EXTERIOR<EB.TXN89.DATA.HORA> = ''
        REC.TXN.EXTERIOR<EB.TXN89.COD.PAIS> = ''
        REC.TXN.EXTERIOR<EB.TXN89.MOEDA> = ''
        REC.TXN.EXTERIOR<EB.TXN89.CAMBIO> = ''
        REC.TXN.EXTERIOR<EB.TXN89.MONTANTE.LCY> = VALOR
        REC.TXN.EXTERIOR<EB.TXN89.MONTANTE.FCY> = ''
        REC.TXN.EXTERIOR<EB.TXN89.NUIT> = ''
        REC.TXN.EXTERIOR<EB.TXN89.NUIT.VALIDO> = ''

        WRITE REC.TXN.EXTERIOR ON F.TXN.EXTERIOR,TXN.EXTERIOR.ID ON ERROR NULL
    END

*CALL DISPLAY.MESSAGE('RESULT = :':RESULT,"6")
    RETURN


HANDLE.NOTIF:

    CUSTOMER.NAME =  R.ACCOUNT<AC.ACCOUNT.TITLE.1>
    GOSUB OPEN.FILE.NOTIF
    YSMS.NO = NOTIF.REC<EB.NOT62.SMS>
    YEMAIL.ADDR = NOTIF.REC<EB.NOT62.EMAIL>

    YNOTIF.TIPO1 =  TRANS.REC<EB.TRA66.NOTIF.TIPO1>
    YNOTIF.TIPO2 =  TRANS.REC<EB.TRA66.NOTIF.TIPO2>

    IF VAL.ACTUAL.EXT GE 500000 AND VAL.ACTUAL.EXT LT 600000 AND YNOTIF.TIPO1 EQ '' THEN
        YTIPO.NOTIF = 1
        IF YSMS.NO NE '' THEN
            GOSUB CREATE.SMS.NOTIF.FILE
        END
        IF YEMAIL.ADDR NE '' THEN
            GOSUB CREATE.EMAIL.NOTIF.FILE
        END
        TRANS.REC<EB.TRA66.NOTIF.TIPO1> = 'Y'
    END
    IF VAL.ACTUAL.EXT GE 600000 AND VAL.ACTUAL.EXT LT 700000 AND YNOTIF.TIPO2 EQ '' THEN
        YTIPO.NOTIF = 2
        IF YSMS.NO NE '' THEN
            GOSUB CREATE.SMS.NOTIF.FILE
        END
        IF YEMAIL.ADDR NE '' THEN
            GOSUB CREATE.EMAIL.NOTIF.FILE
        END
        TRANS.REC<EB.TRA66.NOTIF.TIPO2> = 'Y'
    END
    IF VAL.ACTUAL.EXT GE LIMITE.EXTERIOR AND YTENT.OUT.LIMIT.ORIGINAL = '' THEN
        YTIPO.NOTIF = 3
        IF YSMS.NO NE '' THEN
            GOSUB CREATE.SMS.NOTIF.FILE
        END
        IF YEMAIL.ADDR NE '' THEN
            GOSUB CREATE.EMAIL.NOTIF.FILE
        END
    END
    RETURN


CREATE.SMS.NOTIF.FILE:
    YTEXT = ''
    YTEXT<1> = '<SMS>'
    YTEXT<2> = ' <customer.id>':CUSTOMER:'</customer.id>'
    YTEXT<3> = ' <account.id>':ACCOUNT:'</account.id>'
    YTEXT<4> = ' <customer.name>':CUSTOMER.NAME:'</customer.name>'
    YTEXT<5> = ' <sms.no>':YSMS.NO:'</sms.no>'
    YTEXT<6> = ' <msg.type>':YTIPO.NOTIF:'</msg.type>'
    YTEXT<7> = '</SMS>'
    YFILE.NAME = 'SMS_CLN_':CUSTOMER:'_':YTIPO.NOTIF:'_':TODAY:'.xml'
    WRITE YTEXT TO FV.EMAIL_ALERT,YFILE.NAME
    RETURN

CREATE.EMAIL.NOTIF.FILE:
    YTEXT = ''
    YTEXT<1> = '<EMAIL>'
    YTEXT<2> = ' <customer.id>':CUSTOMER:'</customer.id>'
    YTEXT<3> = ' <account.id>':ACCOUNT:'</account.id>'
    YTEXT<4> = ' <customer.name>':CUSTOMER.NAME:'</customer.name>'
    YTEXT<5> = ' <email.addr>':YEMAIL.ADDR:'</email.addr>'
    YTEXT<6> = ' <msg.type>':YTIPO.NOTIF:'</msg.type>'
    YTEXT<7> = '</EMAIL>'
    YFILE.NAME = 'EMAIL_CLN_':CUSTOMER:'_':YTIPO.NOTIF:'_':TODAY:'.xml'
    WRITE YTEXT TO FV.EMAIL_ALERT,YFILE.NAME
    RETURN

OPEN.FILE.NOTIF:
*   FN.SB.REGISTO.NOTIFICACAO = 'F.EB.SB.REGISTO.NOTIFICACAO'
*   F.SB.REGISTO.NOTIFICACAO = ''
*   CALL OPF(FN.SB.REGISTO.NOTIFICACAO,F.SB.REGISTO.NOTIFICACAO)
*   CALL F.READ(FN.SB.REGISTO.NOTIFICACAO,ACCOUNT,NOTIF.REC,F.SB.REGISTO.NOTIFICACAO,YERR)

    FN.NOTIFICATION.SERVICE = 'F.EB.NOTIFICATION.SERVICE'
    F.NOTIFICATION.SERVICE = ''
    CALL OPF(FN.NOTIFICATION.SERVICE,F.NOTIFICATION.SERVICE)
    CALL F.READ(FN.NOTIFICATION.SERVICE,ACCOUNT,NOTIF.REC,F.NOTIFICATION.SERVICE,YERR)

*   Guardar na pasta /u1/bstm/bnk.data/zz/share/INTERNAL_ALERTS
    FN.EMAIL_ALERT = "INTERNAL_ALERTS"
    FV.EMAIL_ALERT = ''
    CALL OPF(FN.EMAIL_ALERT,FV.EMAIL_ALERT)
    RETURN

OPEN.FILE:
    FN.TRANS.EXTERIOR.LIMITE = 'F.EB.TRANS.EXTERIOR.LIMITE'
    F.TRANS.EXTERIOR.LIMITE = ''
    CALL OPF(FN.TRANS.EXTERIOR.LIMITE,F.TRANS.EXTERIOR.LIMITE)

    FN.TXN.EXTERIOR = 'F.EB.TXN.EXTERIOR'
    F.TXN.EXTERIOR = ''
    CALL OPF(FN.TXN.EXTERIOR,F.TXN.EXTERIOR)

    RETURN

END
