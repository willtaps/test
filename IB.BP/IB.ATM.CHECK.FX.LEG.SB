    SUBROUTINE IB.ATM.CHECK.FX.LEG.SB
*
    $INCLUDE I_COMMON
    $INCLUDE I_ENQUIRY.COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.INTERCO.PARAMETER
    $INCLUDE I_F.ACCOUNT
    $INCLUDE I_F.FUNDS.TRANSFER
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE IB.BP I_IB.TAG.SB.COMMON
    $INCLUDE BP I_F.SB.IB.CCY.ISO

*
    GOSUB INITIALISE

    GOSUB PROCESS

    RETURN

PROCESS:

    M.ACCOUNT.ID = R.RECORD<FT.DEBIT.ACCT.NO>
    CALL F.READ(FN.ACCOUNT, M.ACCOUNT.ID, R.ACCOUNT, F.ACCOUNT , YERR)
    YR.ACCT.CCY = R.ACCOUNT<AC.CURRENCY>

    M.IB.MESSAGE.TAG.SB.ID = "233.4"
    GOSUB GET.TAG.VALUE
    IF TAG.VALUE THEN
        YR.TXN.CCY.CODE = TAG.VALUE
        CALL F.READ(FN.EB.SB.IB.CCY.ISO, YR.TXN.CCY.CODE, R.EB.SB.IB.CCY.ISO, F.EB.SB.IB.CCY.ISO, YERR)
        YR.TXN.CCY =R.EB.SB.IB.CCY.ISO<EB.SB.18.CCY.COD>

        M.IB.MESSAGE.TAG.SB.ID = "237"
        GOSUB GET.TAG.VALUE
        YR.IMPORTOP = TAG.VALUE / 100

        M.IB.MESSAGE.TAG.SB.ID = "238"
        GOSUB GET.TAG.VALUE
        YR.VALTOTAL = TAG.VALUE / 100

        SEL.AMT = ""

        IF YR.ACCT.CCY AND YR.TXN.CCY THEN
            IF YR.ACCT.CCY = YR.TXN.CCY  THEN
                IF YR.IMPORTOP THEN
                    SELL.AMT = YR.IMPORTOP
                END
            END ELSE
                IF YR.VALTOTAL THEN
                    YR.TXN.AMT = YR.VALTOTAL
                    GOSUB CALCULATE.RATE
                END
            END
            IF SELL.AMT THEN
                R.RECORD<FT.CREDIT.AMOUNT> = SELL.AMT
            END
        END
    END

    RETURN


GET.TAG.VALUE:

    LOCATE M.IB.MESSAGE.TAG.SB.ID IN MSG.DATA<MSG.TAG.ID,1> SETTING POS THEN
        TAG.VALUE =  MSG.DATA<MSG.TAG.VALUE,POS>
    END

    RETURN

CALCULATE.RATE:

    CCY.MKT='1' ;
    SELL.AMT="" ;
    BASE.CCY='' ;
    EXCHANGE.RATE="" ;
    RETURN.CODE=''
    ETEXT=""
    CCY.BUY = YR.TXN.CCY
    BUY.AMT = YR.TXN.AMT
    CCY.SELL = LCCY

    CALL EXCHRATE(CCY.MKT,
    CCY.BUY,
    BUY.AMT,
    CCY.SELL,
    SELL.AMT,
    BASE.CCY,
    EXCHANGE.RATE,
    "",
    "",
    RETURN.CODE)

    RETURN

INITIALISE:

    FN.ACCOUNT = "F.ACCOUNT" : FM : "NO.FATAL.ERROR"
    F.ACCOUNT = ""
    CALL OPF(FN.ACCOUNT, F.ACCOUNT)

    FN.EB.SB.IB.CCY.ISO = "F.EB.SB.IB.CCY.ISO" : FM : "NO.FATAL.ERROR"
    F.EB.SB.IB.CCY.ISO = ""
    CALL OPF(FN.EB.SB.IB.CCY.ISO, F.EB.SB.IB.CCY.ISO)

    RETURN

END
