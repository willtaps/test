*-----------------------------------------------------------------------------
* <Rating>460</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE IB.MSG.LOGGER.SB(YR.ACTION, YR.RETURN)
*
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.IB.ATM.MESSAGE.LOG.SB
    $INCLUDE IB.BP I_IB.ATM.MSG.COMMON
    $INCLUDE ATM.BP I_F.ATM.MAPPING.SB
*
    COM/IB.LOGGER.SB/THIS.UPD.PROCESS

    GOSUB INITIALISE

    GOSUB PROCESS

    IF YR.LOCKED THEN
        RELEASE F.IB.ATM.MESSAGE.LOG.SB, M.IB.ATM.MESSAGE.LOG.SB.ID
    END

    RETURN

PROCESS:

    GOSUB READ.LOCK.MESSAGE

    BEGIN CASE

    CASE YR.ACTION = "CHECK"

        IF R.IB.ATM.MESSAGE.LOG.SB THEN
            THIS.UPD.PROCESS = 0
            IF R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.STATUS> = "PROCESSED" THEN
                YR.RETURN =  R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.OUT.MSG>
            END ELSE
                YR.RETURN = "BYPASS"
                YR.ERROR.IN.APPLICATION = FAIL.TXN.IN.PENDING.MODE
            END
        END ELSE
            R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.IN.MSG> = IN.MSG
            R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.STATUS> = "PENDING"
            R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.TIME.STAMP> = OCONV(DATE(),"D/E") : " " : OCONV(TIME(), "MTS")
            R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.INTERNAL.DATE> = DATE()
            WRITE R.IB.ATM.MESSAGE.LOG.SB TO F.IB.ATM.MESSAGE.LOG.SB, M.IB.ATM.MESSAGE.LOG.SB.ID
            THIS.UPD.PROCESS = SYSTEM(101)
        END

    CASE YR.ACTION = "UPDATE"
        IF IN.MSG <> "ERROR" OR IN.MSG <> "BYPASS"  THEN
            IF THIS.UPD.PROCESS EQ SYSTEM(101) THEN
                IF R.ATM.MAPPING.SB<ATM.MAP.DISABLE.LOGGING> = "YES" THEN
                    DELETE F.IB.ATM.MESSAGE.LOG.SB, M.IB.ATM.MESSAGE.LOG.SB.ID
                END ELSE
                    IF R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.STATUS> <> "PROCESSED" THEN
                        R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.OUT.MSG> = IN.MSG
                        R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.STATUS> = "PROCESSED"
                        R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.TIME.STAMP> = OCONV(DATE(),"D/E") : " " : OCONV(TIME(), "MTS")
                        R.IB.ATM.MESSAGE.LOG.SB< IB.LOG.GLOBUS.FT.NO>= ID.NEW
                        IF IN.MSG.TYPE[1,1] = 2 THEN
                            REV.IND = "Y"
                        END ELSE
                            REV.IND = "N"
                        END
                        R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.REVERSAL.IND>= REV.IND
                        R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.ACT.TIMESTAMP>= TIMEDATE()
                        R.IB.ATM.MESSAGE.LOG.SB<IB.LOG.OFS.COMPANY> = OFS.COMPANY

                        WRITE R.IB.ATM.MESSAGE.LOG.SB TO F.IB.ATM.MESSAGE.LOG.SB, M.IB.ATM.MESSAGE.LOG.SB.ID
                    END
                END
            END
        END

    CASE YR.ACTION = "DELETE"

        IF THIS.UPD.PROCESS EQ SYSTEM(101) THEN
            DELETE F.IB.ATM.MESSAGE.LOG.SB, M.IB.ATM.MESSAGE.LOG.SB.ID
        END

    CASE OTHERWISE
        NULL
    END CASE

    RETURN


READ.LOCK.MESSAGE:

    YR.LOCKED = 0

    R.IB.ATM.MESSAGE.LOG.SB = ""
    READ R.IB.ATM.MESSAGE.LOG.SB FROM F.IB.ATM.MESSAGE.LOG.SB, M.IB.ATM.MESSAGE.LOG.SB.ID THEN
        IF R.IB.ATM.MESSAGE.LOG.SB THEN
            RETURN
        END
    END

    READU R.IB.ATM.MESSAGE.LOG.SB FROM F.IB.ATM.MESSAGE.LOG.SB, M.IB.ATM.MESSAGE.LOG.SB.ID ELSE
        R.IB.ATM.MESSAGE.LOG.SB = ""
    END

    YR.LOCKED = 1

    RETURN

INITIALISE:

    TIME.NOW = TIME()

    M.IB.ATM.MESSAGE.LOG.SB.ID = YMSG.KEY
    IN.MSG = YR.RETURN
    YR.RETURN = ""

    RETURN

END
